// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Basics/Colors All 1`] = `
<div
  className="container p-4"
>
  <h1
    className="text-xl mt-8"
  >
    Main
  </h1>
  <h2
    className="text-l mt-4"
  >
    Gray Scale
  </h2>
  <div
    className="flex mt-4"
  >
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(17,17,17)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        800
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(34,34,34)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        700
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(51,51,51)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        600
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(173,173,173)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        500
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(214,214,214)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        400
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(234,234,234)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        300
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(245,245,245)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        200
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(255,255,255)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        100
      </p>
    </div>
  </div>
  <h2
    className="text-l mt-4"
  >
    Primary
  </h2>
  <div
    className="flex mt-4"
  >
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(6,95,38)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        900
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(6,108,43)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        800
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(6,108,43)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        700
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(8,135,54)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        600
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(107,183,134)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        500
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(156,207,175)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        400
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(206,231,215)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        300
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(230,243,234)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        200
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(242,249,245)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        100
      </p>
    </div>
  </div>
  <h1
    className="text-xl mt-8"
  >
    Utility
  </h1>
  <h2
    className="text-l mt-4"
  >
    Red
  </h2>
  <div
    className="flex mt-4"
  >
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(179,68,58)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        800
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(179,68,58)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        700
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(224,85,72)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        600
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(236,153,145)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        500
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(243,187,182)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        400
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(249,221,218)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        300
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(252,238,237)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        200
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(253,246,246)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        100
      </p>
    </div>
  </div>
  <h2
    className="text-l mt-4"
  >
    Highlight Green
  </h2>
  <div
    className="flex mt-4"
  >
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(80,144,64)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        800
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(91,165,74)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        700
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(114,206,92)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        600
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(170,226,157)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        500
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(199,235,190)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        400
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(227,245,222)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        300
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(240,250,238)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        200
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(248,252,247)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        100
      </p>
    </div>
  </div>
  <h1
    className="text-xl mt-8"
  >
    Main Colors (deprecated)
  </h1>
  <h2
    className="text-l mt-4"
  >
    Gray Scale
  </h2>
  <div
    className="flex mt-4"
  >
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(71, 71, 71)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        S90
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(92, 92, 92)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        S80
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(112, 112, 112)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        S70
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(133, 133, 133)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        S60
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(153, 153, 153)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        S50
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(245, 245, 245)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        S5
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(173, 173, 173)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        S40
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(193, 193, 193)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        S30
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(214, 214, 214)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        S20
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(51, 51, 51)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        S100
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(234, 234, 234)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        S10
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(255, 255, 255)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        S0
      </p>
    </div>
  </div>
  <h2
    className="text-l mt-4"
  >
    Primary
  </h2>
  <div
    className="flex mt-4"
  >
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(51, 51, 51)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        default
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(0, 0, 0)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        P95
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(10, 10, 10)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        P80
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(20, 20, 20)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        P60
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(31, 31, 31)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        P40
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(41, 41, 41)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        P20
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(245, 245, 245)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        N95
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(214, 214, 214)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        N80
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(173, 173, 173)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        N60
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(133, 133, 133)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        N40
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(92, 92, 92)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        N20
      </p>
    </div>
  </div>
  <h1
    className="text-xl mt-8"
  >
    Utility (deprecated)
  </h1>
  <h2
    className="text-l mt-4"
  >
    Red
  </h2>
  <div
    className="flex mt-4"
  >
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(224, 85, 72)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        default
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(89, 34, 28)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        P60
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(134, 51, 43)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        P40
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(179, 68, 57)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        P20
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(253, 246, 246)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        N95
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(251, 238, 236)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        N90
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(249, 221, 218)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        N80
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(243, 187, 182)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        N60
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(236, 153, 145)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        N40
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(230, 119, 109)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        N20
      </p>
    </div>
  </div>
  <h2
    className="text-l mt-4"
  >
    Highlight Green
  </h2>
  <div
    className="flex mt-4"
  >
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(114, 206, 92)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        default
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(114, 206, 92)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        P60
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(91, 164, 73)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        P40
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(68, 123, 55)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        P20
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(248, 252, 247)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        N95
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(240, 250, 238)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        N90
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(227, 245, 222)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        N80
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(199, 235, 190)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        N60
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(170, 226, 157)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        N40
      </p>
    </div>
    <div
      className="ml-4"
    >
      <div
        className="h-16 w-16"
        style={
          Object {
            "backgroundColor": "rgb(142, 216, 125)",
          }
        }
      />
      <p
        className="text-center text-xs mt-2"
      >
        N20
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Basics/Icons Index 1`] = `
.c0 {
  margin-top: 12px;
  margin-left: 4px;
  width: 80px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c1 #fill {
  fill: #888;
}

.c2 {
  font-size: 9px;
}

<div
  className="flex flex-wrap w-64"
>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      AddIcon
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      After
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      AnalyzeIcon
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      ArrowDown
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Attachment
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Avatar
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Average
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Before
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      BlackBoard
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      BulkCheck
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Calendar
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      CalendarCheck
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      CalendarCreate
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Caution
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      ChartBar
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      ChartLine
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      ChartPie
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Chat
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      CheckFilled
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      CheckBoxAll
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      CheckBoxOn
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      CheckBoxOff
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      ChevronUp
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      ChevronDown
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      CheckBoxDisabled
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      ChevronLeft
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      ChevronRight
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Close
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Company
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Copy
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Detail
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Delete
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Display
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Download
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Drag
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Dragdrop
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      DropdownOff
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      DropdownOffDisabled
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      DropdownOn
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Edit
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Event
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Excel
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      FilterApply
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Filters
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      GlobalMenu
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Group
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Hamburger
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Home
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Index
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Information
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Help
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Key
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Like
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Link
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      List
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Lock
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      MenuH
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      MenuV
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      MoveDown
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      MoveUp
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Notifiacation
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Phone
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Pin
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Print
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      RadioDisabled
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      RadioOff
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      RadioOn
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Redo
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Redraft
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Refresh
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Remove
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Search
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Section
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Settings
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Share
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Sheet
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      SingleCheck
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Sort
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      SortList
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      SortUpDown
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      SortItems
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Subtract
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Staff
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Tag
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Text
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Textarea
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Time
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Total
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Transition
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      TreeToggle
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Undo
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Union
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Url
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Warning
    </p>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      fill="#888"
    />
    <p
      className="c2"
    >
      Loading
    </p>
  </div>
</div>
`;

exports[`Storyshots Basics/Typography Body 1`] = `
Array [
  <section
    className="container p-4 undefined"
  >
    <h1
      className="text-4xl"
    >
      PC
    </h1>
    <div
      className="flex"
    >
      <div
        className="mt-8 w-64"
      >
        <h2
          className="text-xl"
        >
          Heading
        </h2>
        <ul
          className="list-reset mt-4"
        >
          <li
            className="mt-2"
            style={
              Object {
                "fontSize": "24px",
              }
            }
          >
            H1
             - 
            24px
          </li>
          <li
            className="mt-2"
            style={
              Object {
                "fontSize": "22px",
              }
            }
          >
            H2
             - 
            22px
          </li>
          <li
            className="mt-2"
            style={
              Object {
                "fontSize": "20px",
              }
            }
          >
            H3
             - 
            20px
          </li>
          <li
            className="mt-2"
            style={
              Object {
                "fontSize": "18px",
              }
            }
          >
            H4
             - 
            18px
          </li>
          <li
            className="mt-2"
            style={
              Object {
                "fontSize": "16px",
              }
            }
          >
            H5
             - 
            16px
          </li>
          <li
            className="mt-2"
            style={
              Object {
                "fontSize": "14px",
              }
            }
          >
            H6
             - 
            14px
          </li>
        </ul>
      </div>
      <div
        className="mt-8 w-64"
      >
        <h2
          className="text-xl"
        >
          Body
        </h2>
        <ul
          className="list-reset mt-4"
        >
          <li
            className="mt-2"
            style={
              Object {
                "fontSize": "18px",
              }
            }
          >
            XL
             - 
            18px
          </li>
          <li
            className="mt-2"
            style={
              Object {
                "fontSize": "16px",
              }
            }
          >
            L
             - 
            16px
          </li>
          <li
            className="mt-2"
            style={
              Object {
                "fontSize": "14px",
              }
            }
          >
            default
             - 
            14px
          </li>
          <li
            className="mt-2"
            style={
              Object {
                "fontSize": "12px",
              }
            }
          >
            S
             - 
            12px
          </li>
        </ul>
      </div>
    </div>
  </section>,
  <section
    className="container p-4 mt-12"
  >
    <h1
      className="text-4xl"
    >
      SP
    </h1>
    <div
      className="flex"
    >
      <div
        className="mt-8 w-64"
      >
        <h2
          className="text-xl"
        >
          Heading
        </h2>
        <ul
          className="list-reset mt-4"
        >
          <li
            className="mt-2"
            style={
              Object {
                "fontSize": "24px",
              }
            }
          >
            H1
             - 
            24px
          </li>
          <li
            className="mt-2"
            style={
              Object {
                "fontSize": "22px",
              }
            }
          >
            H2
             - 
            22px
          </li>
          <li
            className="mt-2"
            style={
              Object {
                "fontSize": "20px",
              }
            }
          >
            H3
             - 
            20px
          </li>
          <li
            className="mt-2"
            style={
              Object {
                "fontSize": "18px",
              }
            }
          >
            H4
             - 
            18px
          </li>
          <li
            className="mt-2"
            style={
              Object {
                "fontSize": "16px",
              }
            }
          >
            H5
             - 
            16px
          </li>
          <li
            className="mt-2"
            style={
              Object {
                "fontSize": "14px",
              }
            }
          >
            H6
             - 
            14px
          </li>
        </ul>
      </div>
      <div
        className="mt-8 w-64"
      >
        <h2
          className="text-xl"
        >
          Body
        </h2>
        <ul
          className="list-reset mt-4"
        >
          <li
            className="mt-2"
            style={
              Object {
                "fontSize": "18px",
              }
            }
          >
            XL
             - 
            18px
          </li>
          <li
            className="mt-2"
            style={
              Object {
                "fontSize": "16px",
              }
            }
          >
            L
             - 
            16px
          </li>
          <li
            className="mt-2"
            style={
              Object {
                "fontSize": "14px",
              }
            }
          >
            default
             - 
            14px
          </li>
          <li
            className="mt-2"
            style={
              Object {
                "fontSize": "12px",
              }
            }
          >
            S
             - 
            12px
          </li>
        </ul>
      </div>
    </div>
  </section>,
]
`;

exports[`Storyshots Components/Badge All 1`] = `
.c0 {
  width: 20px;
  height: 20px;
  line-height: 20px;
  border-radius: 50%;
  color: rgb(255,255,255);
  background: rgb(224,85,72);
  font-size: 12px;
  font-weight: bold;
  text-align: center;
}

<div
  className="c0"
>
  10
</div>
`;

exports[`Storyshots Components/Button Box 1`] = `
.c0 {
  position: relative;
  overflow: hidden;
  -webkit-transform: translate3d(0,0,0);
  -ms-transform: translate3d(0,0,0);
  transform: translate3d(0,0,0);
  -webkit-transition: background-color 0.2s,box-shadow 0.2s,border 0.2s;
  transition: background-color 0.2s,box-shadow 0.2s,border 0.2s;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 6px;
  border-style: none;
  padding: 0 16px;
  cursor: pointer;
  height: 40px;
  width: auto;
  box-shadow: none;
  outline: none;
  font-size: 14px;
  color: rgb(255,255,255);
  border: 1px solid rgb(51,51,51);
  background-color: rgb(51,51,51);
}

.c0:after {
  content: '';
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
  background-image: radial-gradient( circle, rgb(255,255,255) 10%, transparent 10.01% );
  background-repeat: no-repeat;
  background-position: 50%;
  -webkit-transform: scale(10,10);
  -ms-transform: scale(10,10);
  transform: scale(10,10);
  opacity: 0;
  -webkit-transition: -webkit-transform 0.2s,opacity 1s;
  -webkit-transition: transform 0.2s,opacity 1s;
  transition: transform 0.2s,opacity 1s;
}

.c0:active:after {
  -webkit-transform: scale(0,0);
  -ms-transform: scale(0,0);
  transform: scale(0,0);
  opacity: 0.3;
  -webkit-transition: 0s;
  transition: 0s;
}

.c0.small {
  height: 32px;
}

.c0:hover {
  background-color: rgb(6,108,43);
  border-color: rgb(51,51,51);
}

.c0:active {
  background-color: rgb(6,95,38);
  border-color: rgb(6,95,38);
  box-shadow: none;
  outline: none;
}

.c0:focus {
  box-shadow: none;
  outline: none;
}

<button
  className="c0"
  disabled={false}
  onClick={[Function]}
  type="submit"
>
  Confirm
</button>
`;

exports[`Storyshots Components/Button Circle 1`] = `
.c0 {
  position: relative;
  overflow: hidden;
  -webkit-transform: translate3d(0,0,0);
  -ms-transform: translate3d(0,0,0);
  transform: translate3d(0,0,0);
  -webkit-transition: background-color 0.2s,box-shadow 0.2s,border 0.2s;
  transition: background-color 0.2s,box-shadow 0.2s,border 0.2s;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-style: none;
  padding: 0;
  cursor: pointer;
  box-shadow: none;
  outline: none;
  width: 48px;
  height: 48px;
  border-radius: 50%;
  box-shadow: 0 5px 11px rgba(0,0,0,0.16);
  color: rgb(255,255,255);
  border: 1px solid rgb(51,51,51);
  background-color: rgb(51,51,51);
}

.c0:after {
  content: '';
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
  background-image: radial-gradient( circle, rgb(255,255,255) 10%, transparent 10.01% );
  background-repeat: no-repeat;
  background-position: 50%;
  -webkit-transform: scale(10,10);
  -ms-transform: scale(10,10);
  transform: scale(10,10);
  opacity: 0;
  -webkit-transition: -webkit-transform 0.2s,opacity 1s;
  -webkit-transition: transform 0.2s,opacity 1s;
  transition: transform 0.2s,opacity 1s;
}

.c0:active:after {
  -webkit-transform: scale(0,0);
  -ms-transform: scale(0,0);
  transform: scale(0,0);
  opacity: 0.3;
  -webkit-transition: 0s;
  transition: 0s;
}

.c0:hover {
  background-color: rgb(92,92,92);
  border-color: rgb(51,51,51);
}

.c0:active {
  background-color: rgb(133,133,133);
  border-color: rgb(133,133,133);
  box-shadow: none;
  outline: none;
}

.c0:focus {
  box-shadow: none;
  outline: none;
}

<button
  className="c0"
  onClick={[Function]}
  type="reset"
/>
`;

exports[`Storyshots Components/Button Text 1`] = `
.c0 {
  background: transparent;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-style: none;
  padding: 0;
  cursor: pointer;
  box-shadow: none;
  outline: none;
  position: relative;
  overflow: hidden;
  -webkit-transform: translate3d(0,0,0);
  -ms-transform: translate3d(0,0,0);
  transform: translate3d(0,0,0);
  -webkit-transition: background-color 0.2s,box-shadow 0.2s,border 0.2s;
  transition: background-color 0.2s,box-shadow 0.2s,border 0.2s;
  height: 24px;
  width: auto;
}

.c0:after {
  content: '';
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
  background-image: radial-gradient( circle, rgb(255,255,255) 10%, transparent 10.01% );
  background-repeat: no-repeat;
  background-position: 50%;
  -webkit-transform: scale(10,10);
  -ms-transform: scale(10,10);
  transform: scale(10,10);
  opacity: 0;
  -webkit-transition: -webkit-transform 0.2s,opacity 1s;
  -webkit-transition: transform 0.2s,opacity 1s;
  transition: transform 0.2s,opacity 1s;
}

.c0:active:after {
  -webkit-transform: scale(0,0);
  -ms-transform: scale(0,0);
  transform: scale(0,0);
  opacity: 0.3;
  -webkit-transition: 0s;
  transition: 0s;
}

.c1 {
  color: rgb(51,51,51);
  padding-left: 0;
  font-size: 14px;
  font-weight: normal;
  white-space: nowrap;
}

<button
  className="c0"
  onClick={[Function]}
  type="button"
>
  <span
    className="c1"
    data-test="text-button-child"
  >
    Show filters
  </span>
</button>
`;

exports[`Storyshots Components/Checkbox All 1`] = `
.c1 {
  height: 24px;
  width: 24px;
}

.c1 svg {
  height: 24px;
  width: 24px;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 24px;
  width: 24px;
}

.c2 #fill {
  fill: rgb(51,51,51);
}

.c2 #fill.disabled {
  fill: rgb(214,214,214);
}

.c3 {
  height: 100%;
  font-size: 14px;
  padding-left: 4px;
  color: default:#333;
}

<div
  className="c0"
  data-test="nocheck-box"
  onClick={[Function]}
  tabIndex={1}
>
  <div
    className="c1 c2"
    dangerouslySetInnerHTML={
      Object {
        "__html": undefined,
      }
    }
    size="24px"
  />
  <span
    className="c3"
  >
    Checkbox
  </span>
</div>
`;

exports[`Storyshots Components/Datepicker Is Outside Range 1`] = `
.c1 {
  height: 24px;
  width: 24px;
}

.c1 svg {
  height: 24px;
  width: 24px;
}

.c1 #fill {
  fill: #333;
}

.c0 .PresetDateRangePicker_panel {
  padding: 0 22px 11px;
}

.c0 .PresetDateRangePicker_button {
  position: relative;
  height: 100%;
  text-align: center;
  background: 0 0;
  border: 2px solid #00a699;
  color: #00a699;
  padding: 4px 12px;
  margin-right: 8px;
  font: inherit;
  font-weight: 700;
  line-height: normal;
  overflow: visible;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  cursor: pointer;
}

.c0 .PresetDateRangePicker_button:active {
  outline: 0;
}

.c0 .PresetDateRangePicker_button__selected {
  color: #fff;
  background: #00a699;
}

.c0 .SingleDatepicker {
  width: 100%;
}

.c0 .SingleDatePickerInput {
  height: 40px;
  border: solid 1px rgb(234,234,234);
  border-radius: 6px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  padding: 0 12px;
  -webkit-transition: all 0.15s;
  transition: all 0.15s;
}

.c0 .SingleDatePickerInput__disabled {
  font-style: normal;
  color: rgb(214,214,214);
  cursor: not-allow;
  border: 1px solid rgb(214,214,214);
  background: rgb(214,214,214);
}

.c0 .SingleDatePickerInput_calendarIcon {
  border: none;
  outline: none;
  padding: 0 4px 0 0;
  cursor: pointer;
  background: rgb(255,255,255);
}

.c0 .SingleDatePickerInput_calendarIcon_svg {
  cursor: pointer;
}

.c0 .SingleDatePicker {
  position: relative;
  display: inline-block;
}

.c0 .SingleDatePicker > div {
  height: 100%;
  width: 100%;
}

.c0 .SingleDatePicker__block {
  display: block;
}

.c0 .SingleDatePicker_picker {
  z-index: 1;
  background-color: #fff;
  position: absolute;
  top: 48px !important;
}

.c0 .SingleDatePicker_picker__rtl {
  direction: rtl;
}

.c0 .SingleDatePicker_picker__directionLeft {
  left: 0;
}

.c0 .SingleDatePicker_picker__directionRight {
  right: 0;
}

.c0 .SingleDatePicker_picker__portal {
  background-color: rgba(0,0,0,0.3);
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
}

.c0 .SingleDatePicker_picker__fullScreenPortal {
  background-color: #fff;
}

.c0 .SingleDatePicker_closeButton {
  background: 0 0;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  cursor: pointer;
  position: absolute;
  top: 0;
  right: 0;
  padding: 15px;
  z-index: 2;
}

.c0 .SingleDatePicker_closeButton:focus,
.c0 .SingleDatePicker_closeButton:hover {
  color: darken(#cacccd,10%);
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c0 .SingleDatePicker_closeButton_svg {
  height: 15px;
  width: 15px;
  fill: #cacccd;
}

.c0 .DayPickerKeyboardShortcuts_buttonReset {
  display: none;
}

.c0 .DayPickerKeyboardShortcuts_buttonReset:active {
  outline: 0;
}

.c0 .DayPickerKeyboardShortcuts_show {
  width: 33px;
  height: 26px;
  position: absolute;
  z-index: 2;
}

.c0 .DayPickerKeyboardShortcuts_show::before {
  content: '';
  display: block;
  position: absolute;
}

.c0 .DayPickerKeyboardShortcuts_show__bottomRight {
  bottom: 0;
  right: 0;
}

.c0 .DayPickerKeyboardShortcuts_show__bottomRight::before {
  border-top: 26px solid transparent;
  border-right: 33px solid #00a699;
  bottom: 0;
  right: 0;
}

.c0 .DayPickerKeyboardShortcuts_show__bottomRight:hover::before {
  border-right: 33px solid #008489;
}

.c0 .DayPickerKeyboardShortcuts_show__topRight {
  top: 0;
  right: 0;
}

.c0 .DayPickerKeyboardShortcuts_show__topRight::before {
  border-bottom: 26px solid transparent;
  border-right: 33px solid #00a699;
  top: 0;
  right: 0;
}

.c0 .DayPickerKeyboardShortcuts_show__topRight:hover::before {
  border-right: 33px solid #008489;
}

.c0 .DayPickerKeyboardShortcuts_show__topLeft {
  top: 0;
  left: 0;
}

.c0 .DayPickerKeyboardShortcuts_show__topLeft::before {
  border-bottom: 26px solid transparent;
  border-left: 33px solid #00a699;
  top: 0;
  left: 0;
}

.c0 .DayPickerKeyboardShortcuts_show__topLeft:hover::before {
  border-left: 33px solid #008489;
}

.c0 .DayPickerKeyboardShortcuts_showSpan {
  color: #fff;
  position: absolute;
}

.c0 .DayPickerKeyboardShortcuts_showSpan__bottomRight {
  bottom: 0;
  right: 5px;
}

.c0 .DayPickerKeyboardShortcuts_showSpan__topRight {
  top: 1px;
  right: 5px;
}

.c0 .DayPickerKeyboardShortcuts_showSpan__topLeft {
  top: 1px;
  left: 5px;
}

.c0 .DayPickerKeyboardShortcuts_panel {
  overflow: auto;
  background: #fff;
  border: 1px solid #dbdbdb;
  border-radius: 2px;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  z-index: 2;
  padding: 22px;
  margin: 33px;
  text-align: left;
}

.c0 .DayPickerKeyboardShortcuts_title {
  font-size: 14px;
  font-weight: 700;
  margin: 0;
}

.c0 .DayPickerKeyboardShortcuts_list {
  list-style: none;
  padding: 0;
  font-size: 14px;
}

.c0 .DayPickerKeyboardShortcuts_close {
  position: absolute;
  right: 22px;
  top: 22px;
  z-index: 2;
}

.c0 .DayPickerKeyboardShortcuts_close:active {
  outline: 0;
}

.c0 .DayPickerKeyboardShortcuts_closeSvg {
  height: 15px;
  width: 15px;
  fill: #cacccd;
}

.c0 .DayPickerKeyboardShortcuts_closeSvg:focus,
.c0 .DayPickerKeyboardShortcuts_closeSvg:hover {
  fill: #82888a;
}

.c0 td.CalendarDay {
  width: 32px !important;
  height: 32px !important;
  padding: 6px 6px;
}

.c0 td.CalendarDay__default {
  width: 44px;
  height: 44px;
  marging-top: 12px;
  marging-bottom: 12px;
}

.c0 .CalendarDay {
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  cursor: pointer;
  font-size: 14px;
  text-align: center;
  margin-top: 12px;
  margin-bottom: 12px;
}

.c0 .CalendarDay:active {
  outline: 0;
}

.c0 .CalendarDay__defaultCursor {
  cursor: default;
}

.c0 .CalendarDay__default {
  color: rgb(51,51,51);
  background: #fff;
}

.c0 .CalendarDay__default:hover {
  background: #e4e7e7;
  color: inherit;
}

.c0 .CalendarDay__hovered_offset {
  background: #f4f5f5;
  border: 1px double #e4e7e7;
  color: inherit;
}

.c0 .CalendarDay__outside {
  border: 0;
  background: #fff;
  color: #d6d6d6;
}

.c0 .CalendarDay__outside:hover {
  border: 0;
}

.c0 .CalendarDay__blocked_minimum_nights {
  background: #fff;
  border: 1px solid #eceeee;
  color: #cacccd;
}

.c0 .CalendarDay__blocked_minimum_nights:active,
.c0 .CalendarDay__blocked_minimum_nights:hover {
  background: #fff;
  color: #cacccd;
}

.c0 .CalendarDay__highlighted_calendar {
  background: #ffe8bc;
  color: rgb(51,51,51);
}

.c0 .CalendarDay__highlighted_calendar:active,
.c0 .CalendarDay__highlighted_calendar:hover {
  background: #ffce71;
  color: rgb(51,51,51);
}

.c0 .CalendarDay__selected_span {
  background: #66e2da;
  border: 1px double #33dacd;
  color: #fff;
}

.c0 .CalendarDay__selected_span:active,
.c0 .CalendarDay__selected_span:hover {
  background: #33dacd;
  border: 1px double #33dacd;
  color: #fff;
}

.c0 .CalendarDay__selected,
.c0 .CalendarDay__selected:active,
.c0 .CalendarDay__selected:hover {
  background: #222222;
  color: #fff;
  border-radius: 70px;
}

.c0 .CalendarDay__hovered_span,
.c0 .CalendarDay__hovered_span:hover {
  background: #b2f1ec;
  border: 1px double #80e8e0;
  color: #007a87;
}

.c0 .CalendarDay__hovered_span:active {
  background: #80e8e0;
  border: 1px double #80e8e0;
  color: #007a87;
}

.c0 .CalendarDay__blocked_calendar,
.c0 .CalendarDay__blocked_calendar:active,
.c0 .CalendarDay__blocked_calendar:hover {
  background: #cacccd;
  border: 1px solid #cacccd;
  color: #82888a;
}

.c0 .CalendarDay__blocked_out_of_range,
.c0 .CalendarDay__blocked_out_of_range:active,
.c0 .CalendarDay__blocked_out_of_range:hover {
  background: #fff;
  color: #cacccd;
}

.c0 .CalendarDay__hovered_start_first_possible_end {
  background: #eceeee;
  border: 1px double #eceeee;
}

.c0 .CalendarDay__hovered_start_blocked_min_nights {
  background: #eceeee;
  border: 1px double #e4e7e7;
}

.c0 .CalendarMonth {
  padding: 0px 0px !important;
  background: #fff;
  text-align: center;
  vertical-align: top;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c0 .CalendarMonth_table {
  border-collapse: collapse;
  border-spacing: 0;
  margin-top: 40px;
}

.c0 .CalendarMonth_verticalSpacing {
  border-collapse: separate;
}

.c0 .CalendarMonth_caption {
  color: rgb(51,51,51);
  font-size: 14px;
  text-align: center;
  padding-top: 10px;
  padding-bottom: 12px;
  caption-side: initial;
}

.c0 .CalendarMonth_caption strong {
  font-weight: bold;
}

.c0 .CalendarMonth_caption__verticalScrollable {
  padding-top: 12px;
  padding-bottom: 7px;
}

.c0 .CalendarMonthGrid {
  background: #fff;
  text-align: left;
  z-index: 0;
}

.c0 .CalendarMonthGrid__animating {
  z-index: 1;
}

.c0 .CalendarMonthGrid__horizontal {
  position: absolute;
  left: 9px;
}

.c0 .CalendarMonthGrid__vertical {
  margin: 0 auto;
}

.c0 .CalendarMonthGrid__vertical_scrollable {
  margin: 0 auto;
  overflow-y: scroll;
}

.c0 .CalendarMonthGrid_month__horizontal {
  display: inline-block;
  vertical-align: top;
  min-height: 100%;
}

.c0 .CalendarMonthGrid_month__hideForAnimation {
  position: absolute;
  z-index: -1;
  opacity: 0;
  pointer-events: none;
}

.c0 .CalendarMonthGrid_month__hidden {
  visibility: hidden;
}

.c0 div.DayPickerNavigation div:first-of-type {
  padding-left: 7px;
}

.c0 div.DayPickerNavigation div:last-of-type {
  padding-right: 22px;
}

.c0 .DayPickerNavigation {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  z-index: 2;
}

.c0 .DayPickerNavigation__horizontal {
  height: 0;
}

.c0 .DayPickerNavigation__verticalDefault {
  position: absolute;
  width: 100%;
  height: 52px;
  bottom: 0;
  left: 0;
}

.c0 .DayPickerNavigation__verticalScrollableDefault {
  position: relative;
}

.c0 .DayPickerNavigation__bottom {
  height: auto;
}

.c0 .DayPickerNavigation__bottomDefault {
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: space-between;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c0 .DayPickerNavigation_button {
  padding-right: 12px;
  padding-top: 8px;
  padding-left: 12px;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  border: 0;
  margin: 0;
}

.c0 .DayPickerNavigation_button__default {
  border: 1px solid #e4e7e7;
  background-color: #fff;
  color: #757575;
}

.c0 .DayPickerNavigation_button__default:focus,
.c0 .DayPickerNavigation_button__default:hover {
  border: 1px solid #c4c4c4;
}

.c0 .DayPickerNavigation_button__default:active {
  background: #f2f2f2;
}

.c0 .DayPickerNavigation_button__disabled {
  cursor: not-allowed;
  font-style: normal;
  color: rgb(153,153,153);
  border: 1px solid rgb(214,214,214);
  background: rgb(214,214,214);
}

.c0 .DayPickerNavigation_button__disabled:focus,
.c0 .DayPickerNavigation_button__disabled:hover {
  cursor: not-allowed;
  border: 1px solid rgb(214,214,214);
}

.c0 .DayPickerNavigation_button__disabled:active {
  background: 0 0;
}

.c0 .DayPickerNavigation_button__horizontalDefault {
  position: absolute;
  top: 18px;
  line-height: 0.78;
  border-radius: 3px;
  padding: 6px 9px;
}

.c0 .DayPickerNavigation_bottomButton__horizontalDefault {
  position: static;
  margin: -10px 22px 30px;
}

.c0 .DayPickerNavigation_leftButton__horizontalDefault {
  left: 22px;
}

.c0 .DayPickerNavigation_rightButton__horizontalDefault {
  right: 22px;
}

.c0 .DayPickerNavigation_button__verticalDefault {
  padding: 5px;
  background: #fff;
  box-shadow: 0 0 5px 2px rgba(0,0,0,0.1);
  position: relative;
  display: inline-block;
  text-align: center;
  height: 100%;
  width: 50%;
}

.c0 .DayPickerNavigation_nextButton__verticalDefault {
  border-left: 0;
}

.c0 .DayPickerNavigation_nextButton__verticalScrollableDefault {
  width: 100%;
}

.c0 .DayPickerNavigation_svg__horizontal {
  height: 19px;
  width: 19px;
  fill: #82888a;
  display: block;
}

.c0 .DayPickerNavigation_svg__vertical {
  height: 42px;
  width: 42px;
  fill: rgb(51,51,51);
}

.c0 .DayPickerNavigation_svg__disabled {
  fill: #f2f2f2;
}

.c0 .DayPicker {
  background: #fff;
  position: relative;
  text-align: left;
  width: 245px !important;
}

.c0 .DayPicker__horizontal {
  background: #fff;
}

.c0 .DayPicker__horizontal > div > div:first-child {
  width: 258px !important;
}

.c0 .DayPicker__verticalScrollable {
  height: 100%;
}

.c0 .DayPicker__hidden {
  visibility: hidden;
}

.c0 .DayPicker__withBorder {
  box-shadow: 0 2px 6px rgba(0,0,0,0.05), 0 0 0 1px rgba(0,0,0,0.07);
  border-radius: 3px;
}

.c0 .DayPicker_portal__horizontal {
  box-shadow: none;
  position: absolute;
  left: 50%;
  top: 50%;
}

.c0 .DayPicker_portal__vertical {
  position: initial;
}

.c0 .DayPicker_focusRegion {
  outline: 0;
}

.c0 .DayPicker_calendarInfo__horizontal,
.c0 .DayPicker_wrapper__horizontal {
  display: inline-block;
  vertical-align: top;
}

.c0 .DayPicker_weekHeaders {
  position: relative;
  left: -9px !important;
}

.c0 .DayPicker_weekHeaders__horizontal {
  margin-left: 9px;
}

.c0 .DayPicker_weekHeader {
  border-bottom: solid 1px rgb(234,234,234);
  border-top: solid 1px rgb(234,234,234);
  position: absolute;
  top: 39px;
  z-index: 2;
  text-align: left;
  padding: 0px 11px 0px 10px !important;
}

.c0 .DayPicker_weekHeader__vertical {
  left: 50%;
}

.c0 .DayPicker_weekHeader__verticalScrollable {
  top: 0;
  display: table-row;
  border-bottom: 1px solid #dbdbdb;
  background: #fff;
  margin-left: 0;
  left: 0;
  width: 100%;
  text-align: center;
}

.c0 .DayPicker_weekHeader_ul {
  list-style: none;
  padding-left: 0;
  padding-right: 0;
  font-size: 14px;
}

.c0 .DayPicker_weekHeader_li {
  display: inline-block;
  text-align: center;
  margin-top: 8px;
  margin-bottom: 8px;
  width: 32px !important;
}

.c0 .DayPicker_weekHeader_li > small {
  font-size: 14px;
}

.c0 .DayPicker_transitionContainer {
  position: relative;
  overflow: hidden;
  border-radius: 6px;
  width: 245px !important;
}

.c0 .DayPicker_transitionContainer__horizontal {
  -webkit-transition: height 0.2s ease-in-out;
  -moz-transition: height 0.2s ease-in-out;
  -webkit-transition: height 0.2s ease-in-out;
  transition: height 0.2s ease-in-out;
}

.c0 .DayPicker_transitionContainer__vertical {
  width: 100%;
}

.c0 .DayPicker_transitionContainer__verticalScrollable {
  padding-top: 20px;
  height: 100%;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  overflow-y: scroll;
}

.c0 .DayPicker_transitionContainer__vertical {
  width: 100%;
}

.c0 .DayPicker_transitionContainer__verticalScrollable {
  padding-top: 20px;
  height: 100%;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  overflow-y: scroll;
}

.c0 .DateInput {
  height: 100%;
  background-color: transparent;
  margin: 0;
  position: relative;
  vertical-align: middle;
  display: contents;
  text-align: left;
}

.c0 .DateInput__small {
  width: 97px;
}

.c0 .DateInput__block {
  width: 100%;
}

.c0 .DateInput__disabled {
  background: #f2f2f2;
  color: #f2f2f2;
}

.c0 .DateInput_input {
  text-align: left;
  background-color: transparent;
  border: none;
  font-weight: 200;
  line-height: 24px;
  color: rgb(51,51,51);
  height: 100%;
  width: 112px;
  font-size: 14px;
}

.c0 .DateInput_input::-webkit-input-placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input::-moz-placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input:-ms-input-placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input::placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input__small {
  font-size: 14px;
  line-height: 18px;
  -webkit-letter-spacing: 0.2px;
  -moz-letter-spacing: 0.2px;
  -ms-letter-spacing: 0.2px;
  letter-spacing: 0.2px;
  padding: 7px 7px 5px;
}

.c0 .DateInput_input__regular {
  font-weight: auto;
}

.c0 .DateInput_input__readOnly {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c0 .DateInput_input__disabled {
  cursor: not-allowed;
  font-style: normal;
  color: rgb(153,153,153);
  border: 1px solid rgb(214,214,214);
  background: rgb(214,214,214);
}

.c0 .DateInput_input__disabled::-webkit-input-placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input__disabled::-moz-placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input__disabled:-ms-input-placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input__disabled::placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input__focused {
  outline: none;
  border-color: default:rgb(114,206,92);
  -n20: rgb(142,216,125);
  -n40: rgb(170,226,157);
  -n60: rgb(199,235,190);
  -n80: rgb(227,245,222);
  -n90: rgb(240,250,238);
  -n95: rgb(248,252,247);
  -p20: rgb(68,123,55);
  -p40: rgb(91,164,73);
  -p60: rgb(114,206,92);
}

.c0 .DateInput_screenReaderMessage {
  border: 0;
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.c0 .DateInput_fang {
  display: none;
  position: absolute;
  width: 20px;
  height: 10px;
  left: 22px;
  z-index: 2;
}

.c0 .DateInput_fangShape {
  fill: #fff;
}

.c0 .DateInput_fangStroke {
  stroke: #dbdbdb;
  fill: transparent;
}

.c0 .DateRangePickerInput {
  background-color: #fff;
  display: inline-block;
}

.c0 .DateRangePickerInput__disabled {
  background: #f2f2f2;
}

.c0 .DateRangePickerInput__withBorder {
  border-radius: 2px;
  border: 1px solid #dbdbdb;
}

.c0 .DateRangePickerInput__rtl {
  direction: rtl;
}

.c0 .DateRangePickerInput__block {
  display: block;
}

.c0 .DateRangePickerInput__showClearDates {
  padding-right: 30px;
}

.c0 .DateRangePickerInput_arrow {
  display: inline-block;
  vertical-align: middle;
  color: rgb(51,51,51);
  width: 12px;
}

.c0 .DateRangePickerInput_arrow_svg {
  vertical-align: middle;
  fill: rgb(51,51,51);
  height: 24px;
  width: 24px;
}

.c0 .DateRangePickerInput_clearDates {
  background: 0 0;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  cursor: pointer;
  padding: 10px;
  margin: 0 10px 0 5px;
  position: absolute;
  right: 0;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

.c0 .DateRangePickerInput_clearDates__small {
  padding: 6px;
}

.c0 .DateRangePickerInput_clearDates_default:focus,
.c0 .DateRangePickerInput_clearDates_default:hover {
  background: #dbdbdb;
  border-radius: 50%;
}

.c0 .DateRangePickerInput_clearDates__hide {
  visibility: hidden;
}

.c0 .DateRangePickerInput_clearDates_svg {
  fill: #82888a;
  height: 12px;
  width: 15px;
  vertical-align: middle;
}

.c0 .DateRangePickerInput_clearDates_svg__small {
  height: 9px;
}

.c0 .DateRangePickerInput_calendarIcon {
  background: 0 0;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  cursor: pointer;
  display: inline-block;
  vertical-align: middle;
  padding: 10px;
  margin: 0 5px 0 10px;
}

.c0 .DateRangePickerInput_calendarIcon_svg {
  fill: #82888a;
  height: 15px;
  width: 14px;
  vertical-align: middle;
}

.c0 .DateRangePicker {
  position: relative;
  display: inline-block;
}

.c0 .DateRangePicker__block {
  display: block;
}

.c0 .DateRangePicker_picker {
  z-index: 1;
  background-color: #fff;
  position: absolute;
}

.c0 .DateRangePicker_picker__rtl {
  direction: rtl;
}

.c0 .DateRangePicker_picker__directionLeft {
  left: 0;
}

.c0 .DateRangePicker_picker__directionRight {
  right: 0;
}

.c0 .DateRangePicker_picker__portal {
  background-color: rgba(0,0,0,0.3);
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
}

.c0 .DateRangePicker_picker__fullScreenPortal {
  background-color: #fff;
}

.c0 .DateRangePicker_closeButton {
  background: 0 0;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  cursor: pointer;
  position: absolute;
  top: 0;
  right: 0;
  padding: 15px;
  z-index: 2;
}

.c0 .DateRangePicker_closeButton:focus,
.c0 .DateRangePicker_closeButton:hover {
  color: darken(#cacccd,10%);
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c0 .DateRangePicker_closeButton_svg {
  height: 15px;
  width: 15px;
  fill: #cacccd;
}

<div
  className="c0"
  disabled={false}
  width="100%"
>
  <div
    className="SingleDatePicker SingleDatePicker_1"
  >
    <div>
      <div
        className="SingleDatePickerInput SingleDatePickerInput_1 SingleDatePickerInput__withBorder SingleDatePickerInput__withBorder_2"
      >
        <button
          className="SingleDatePickerInput_calendarIcon SingleDatePickerInput_calendarIcon_1"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          <div
            className="c1"
            color="#333"
            dangerouslySetInnerHTML={
              Object {
                "__html": undefined,
              }
            }
            size="24px"
          />
        </button>
        <div
          className="DateInput DateInput_1"
        >
          <input
            aria-describedby="DateInput__screen-reader-message-date"
            aria-label=""
            autoComplete="off"
            className="DateInput_input DateInput_input_1"
            disabled={false}
            id="date"
            name="date"
            onChange={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            placeholder=""
            readOnly={false}
            required={false}
            type="text"
            value="2019年12月25日"
          />
          <p
            className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
            id="DateInput__screen-reader-message-date"
          >
            Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Datepicker Null 1`] = `
.c1 {
  height: 24px;
  width: 24px;
}

.c1 svg {
  height: 24px;
  width: 24px;
}

.c1 #fill {
  fill: #333;
}

.c0 .PresetDateRangePicker_panel {
  padding: 0 22px 11px;
}

.c0 .PresetDateRangePicker_button {
  position: relative;
  height: 100%;
  text-align: center;
  background: 0 0;
  border: 2px solid #00a699;
  color: #00a699;
  padding: 4px 12px;
  margin-right: 8px;
  font: inherit;
  font-weight: 700;
  line-height: normal;
  overflow: visible;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  cursor: pointer;
}

.c0 .PresetDateRangePicker_button:active {
  outline: 0;
}

.c0 .PresetDateRangePicker_button__selected {
  color: #fff;
  background: #00a699;
}

.c0 .SingleDatepicker {
  width: 100%;
}

.c0 .SingleDatePickerInput {
  height: 40px;
  border: solid 1px rgb(234,234,234);
  border-radius: 6px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  padding: 0 12px;
  -webkit-transition: all 0.15s;
  transition: all 0.15s;
}

.c0 .SingleDatePickerInput__disabled {
  font-style: normal;
  color: rgb(214,214,214);
  cursor: not-allow;
  border: 1px solid rgb(214,214,214);
  background: rgb(214,214,214);
}

.c0 .SingleDatePickerInput_calendarIcon {
  border: none;
  outline: none;
  padding: 0 4px 0 0;
  cursor: pointer;
  background: rgb(255,255,255);
}

.c0 .SingleDatePickerInput_calendarIcon_svg {
  cursor: pointer;
}

.c0 .SingleDatePicker {
  position: relative;
  display: inline-block;
}

.c0 .SingleDatePicker > div {
  height: 100%;
  width: 100%;
}

.c0 .SingleDatePicker__block {
  display: block;
}

.c0 .SingleDatePicker_picker {
  z-index: 1;
  background-color: #fff;
  position: absolute;
  top: 48px !important;
}

.c0 .SingleDatePicker_picker__rtl {
  direction: rtl;
}

.c0 .SingleDatePicker_picker__directionLeft {
  left: 0;
}

.c0 .SingleDatePicker_picker__directionRight {
  right: 0;
}

.c0 .SingleDatePicker_picker__portal {
  background-color: rgba(0,0,0,0.3);
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
}

.c0 .SingleDatePicker_picker__fullScreenPortal {
  background-color: #fff;
}

.c0 .SingleDatePicker_closeButton {
  background: 0 0;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  cursor: pointer;
  position: absolute;
  top: 0;
  right: 0;
  padding: 15px;
  z-index: 2;
}

.c0 .SingleDatePicker_closeButton:focus,
.c0 .SingleDatePicker_closeButton:hover {
  color: darken(#cacccd,10%);
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c0 .SingleDatePicker_closeButton_svg {
  height: 15px;
  width: 15px;
  fill: #cacccd;
}

.c0 .DayPickerKeyboardShortcuts_buttonReset {
  display: none;
}

.c0 .DayPickerKeyboardShortcuts_buttonReset:active {
  outline: 0;
}

.c0 .DayPickerKeyboardShortcuts_show {
  width: 33px;
  height: 26px;
  position: absolute;
  z-index: 2;
}

.c0 .DayPickerKeyboardShortcuts_show::before {
  content: '';
  display: block;
  position: absolute;
}

.c0 .DayPickerKeyboardShortcuts_show__bottomRight {
  bottom: 0;
  right: 0;
}

.c0 .DayPickerKeyboardShortcuts_show__bottomRight::before {
  border-top: 26px solid transparent;
  border-right: 33px solid #00a699;
  bottom: 0;
  right: 0;
}

.c0 .DayPickerKeyboardShortcuts_show__bottomRight:hover::before {
  border-right: 33px solid #008489;
}

.c0 .DayPickerKeyboardShortcuts_show__topRight {
  top: 0;
  right: 0;
}

.c0 .DayPickerKeyboardShortcuts_show__topRight::before {
  border-bottom: 26px solid transparent;
  border-right: 33px solid #00a699;
  top: 0;
  right: 0;
}

.c0 .DayPickerKeyboardShortcuts_show__topRight:hover::before {
  border-right: 33px solid #008489;
}

.c0 .DayPickerKeyboardShortcuts_show__topLeft {
  top: 0;
  left: 0;
}

.c0 .DayPickerKeyboardShortcuts_show__topLeft::before {
  border-bottom: 26px solid transparent;
  border-left: 33px solid #00a699;
  top: 0;
  left: 0;
}

.c0 .DayPickerKeyboardShortcuts_show__topLeft:hover::before {
  border-left: 33px solid #008489;
}

.c0 .DayPickerKeyboardShortcuts_showSpan {
  color: #fff;
  position: absolute;
}

.c0 .DayPickerKeyboardShortcuts_showSpan__bottomRight {
  bottom: 0;
  right: 5px;
}

.c0 .DayPickerKeyboardShortcuts_showSpan__topRight {
  top: 1px;
  right: 5px;
}

.c0 .DayPickerKeyboardShortcuts_showSpan__topLeft {
  top: 1px;
  left: 5px;
}

.c0 .DayPickerKeyboardShortcuts_panel {
  overflow: auto;
  background: #fff;
  border: 1px solid #dbdbdb;
  border-radius: 2px;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  z-index: 2;
  padding: 22px;
  margin: 33px;
  text-align: left;
}

.c0 .DayPickerKeyboardShortcuts_title {
  font-size: 14px;
  font-weight: 700;
  margin: 0;
}

.c0 .DayPickerKeyboardShortcuts_list {
  list-style: none;
  padding: 0;
  font-size: 14px;
}

.c0 .DayPickerKeyboardShortcuts_close {
  position: absolute;
  right: 22px;
  top: 22px;
  z-index: 2;
}

.c0 .DayPickerKeyboardShortcuts_close:active {
  outline: 0;
}

.c0 .DayPickerKeyboardShortcuts_closeSvg {
  height: 15px;
  width: 15px;
  fill: #cacccd;
}

.c0 .DayPickerKeyboardShortcuts_closeSvg:focus,
.c0 .DayPickerKeyboardShortcuts_closeSvg:hover {
  fill: #82888a;
}

.c0 td.CalendarDay {
  width: 32px !important;
  height: 32px !important;
  padding: 6px 6px;
}

.c0 td.CalendarDay__default {
  width: 44px;
  height: 44px;
  marging-top: 12px;
  marging-bottom: 12px;
}

.c0 .CalendarDay {
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  cursor: pointer;
  font-size: 14px;
  text-align: center;
  margin-top: 12px;
  margin-bottom: 12px;
}

.c0 .CalendarDay:active {
  outline: 0;
}

.c0 .CalendarDay__defaultCursor {
  cursor: default;
}

.c0 .CalendarDay__default {
  color: rgb(51,51,51);
  background: #fff;
}

.c0 .CalendarDay__default:hover {
  background: #e4e7e7;
  color: inherit;
}

.c0 .CalendarDay__hovered_offset {
  background: #f4f5f5;
  border: 1px double #e4e7e7;
  color: inherit;
}

.c0 .CalendarDay__outside {
  border: 0;
  background: #fff;
  color: #d6d6d6;
}

.c0 .CalendarDay__outside:hover {
  border: 0;
}

.c0 .CalendarDay__blocked_minimum_nights {
  background: #fff;
  border: 1px solid #eceeee;
  color: #cacccd;
}

.c0 .CalendarDay__blocked_minimum_nights:active,
.c0 .CalendarDay__blocked_minimum_nights:hover {
  background: #fff;
  color: #cacccd;
}

.c0 .CalendarDay__highlighted_calendar {
  background: #ffe8bc;
  color: rgb(51,51,51);
}

.c0 .CalendarDay__highlighted_calendar:active,
.c0 .CalendarDay__highlighted_calendar:hover {
  background: #ffce71;
  color: rgb(51,51,51);
}

.c0 .CalendarDay__selected_span {
  background: #66e2da;
  border: 1px double #33dacd;
  color: #fff;
}

.c0 .CalendarDay__selected_span:active,
.c0 .CalendarDay__selected_span:hover {
  background: #33dacd;
  border: 1px double #33dacd;
  color: #fff;
}

.c0 .CalendarDay__selected,
.c0 .CalendarDay__selected:active,
.c0 .CalendarDay__selected:hover {
  background: #222222;
  color: #fff;
  border-radius: 70px;
}

.c0 .CalendarDay__hovered_span,
.c0 .CalendarDay__hovered_span:hover {
  background: #b2f1ec;
  border: 1px double #80e8e0;
  color: #007a87;
}

.c0 .CalendarDay__hovered_span:active {
  background: #80e8e0;
  border: 1px double #80e8e0;
  color: #007a87;
}

.c0 .CalendarDay__blocked_calendar,
.c0 .CalendarDay__blocked_calendar:active,
.c0 .CalendarDay__blocked_calendar:hover {
  background: #cacccd;
  border: 1px solid #cacccd;
  color: #82888a;
}

.c0 .CalendarDay__blocked_out_of_range,
.c0 .CalendarDay__blocked_out_of_range:active,
.c0 .CalendarDay__blocked_out_of_range:hover {
  background: #fff;
  color: #cacccd;
}

.c0 .CalendarDay__hovered_start_first_possible_end {
  background: #eceeee;
  border: 1px double #eceeee;
}

.c0 .CalendarDay__hovered_start_blocked_min_nights {
  background: #eceeee;
  border: 1px double #e4e7e7;
}

.c0 .CalendarMonth {
  padding: 0px 0px !important;
  background: #fff;
  text-align: center;
  vertical-align: top;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c0 .CalendarMonth_table {
  border-collapse: collapse;
  border-spacing: 0;
  margin-top: 40px;
}

.c0 .CalendarMonth_verticalSpacing {
  border-collapse: separate;
}

.c0 .CalendarMonth_caption {
  color: rgb(51,51,51);
  font-size: 14px;
  text-align: center;
  padding-top: 10px;
  padding-bottom: 12px;
  caption-side: initial;
}

.c0 .CalendarMonth_caption strong {
  font-weight: bold;
}

.c0 .CalendarMonth_caption__verticalScrollable {
  padding-top: 12px;
  padding-bottom: 7px;
}

.c0 .CalendarMonthGrid {
  background: #fff;
  text-align: left;
  z-index: 0;
}

.c0 .CalendarMonthGrid__animating {
  z-index: 1;
}

.c0 .CalendarMonthGrid__horizontal {
  position: absolute;
  left: 9px;
}

.c0 .CalendarMonthGrid__vertical {
  margin: 0 auto;
}

.c0 .CalendarMonthGrid__vertical_scrollable {
  margin: 0 auto;
  overflow-y: scroll;
}

.c0 .CalendarMonthGrid_month__horizontal {
  display: inline-block;
  vertical-align: top;
  min-height: 100%;
}

.c0 .CalendarMonthGrid_month__hideForAnimation {
  position: absolute;
  z-index: -1;
  opacity: 0;
  pointer-events: none;
}

.c0 .CalendarMonthGrid_month__hidden {
  visibility: hidden;
}

.c0 div.DayPickerNavigation div:first-of-type {
  padding-left: 7px;
}

.c0 div.DayPickerNavigation div:last-of-type {
  padding-right: 22px;
}

.c0 .DayPickerNavigation {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  z-index: 2;
}

.c0 .DayPickerNavigation__horizontal {
  height: 0;
}

.c0 .DayPickerNavigation__verticalDefault {
  position: absolute;
  width: 100%;
  height: 52px;
  bottom: 0;
  left: 0;
}

.c0 .DayPickerNavigation__verticalScrollableDefault {
  position: relative;
}

.c0 .DayPickerNavigation__bottom {
  height: auto;
}

.c0 .DayPickerNavigation__bottomDefault {
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: space-between;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c0 .DayPickerNavigation_button {
  padding-right: 12px;
  padding-top: 8px;
  padding-left: 12px;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  border: 0;
  margin: 0;
}

.c0 .DayPickerNavigation_button__default {
  border: 1px solid #e4e7e7;
  background-color: #fff;
  color: #757575;
}

.c0 .DayPickerNavigation_button__default:focus,
.c0 .DayPickerNavigation_button__default:hover {
  border: 1px solid #c4c4c4;
}

.c0 .DayPickerNavigation_button__default:active {
  background: #f2f2f2;
}

.c0 .DayPickerNavigation_button__disabled {
  cursor: not-allowed;
  font-style: normal;
  color: rgb(153,153,153);
  border: 1px solid rgb(214,214,214);
  background: rgb(214,214,214);
}

.c0 .DayPickerNavigation_button__disabled:focus,
.c0 .DayPickerNavigation_button__disabled:hover {
  cursor: not-allowed;
  border: 1px solid rgb(214,214,214);
}

.c0 .DayPickerNavigation_button__disabled:active {
  background: 0 0;
}

.c0 .DayPickerNavigation_button__horizontalDefault {
  position: absolute;
  top: 18px;
  line-height: 0.78;
  border-radius: 3px;
  padding: 6px 9px;
}

.c0 .DayPickerNavigation_bottomButton__horizontalDefault {
  position: static;
  margin: -10px 22px 30px;
}

.c0 .DayPickerNavigation_leftButton__horizontalDefault {
  left: 22px;
}

.c0 .DayPickerNavigation_rightButton__horizontalDefault {
  right: 22px;
}

.c0 .DayPickerNavigation_button__verticalDefault {
  padding: 5px;
  background: #fff;
  box-shadow: 0 0 5px 2px rgba(0,0,0,0.1);
  position: relative;
  display: inline-block;
  text-align: center;
  height: 100%;
  width: 50%;
}

.c0 .DayPickerNavigation_nextButton__verticalDefault {
  border-left: 0;
}

.c0 .DayPickerNavigation_nextButton__verticalScrollableDefault {
  width: 100%;
}

.c0 .DayPickerNavigation_svg__horizontal {
  height: 19px;
  width: 19px;
  fill: #82888a;
  display: block;
}

.c0 .DayPickerNavigation_svg__vertical {
  height: 42px;
  width: 42px;
  fill: rgb(51,51,51);
}

.c0 .DayPickerNavigation_svg__disabled {
  fill: #f2f2f2;
}

.c0 .DayPicker {
  background: #fff;
  position: relative;
  text-align: left;
  width: 245px !important;
}

.c0 .DayPicker__horizontal {
  background: #fff;
}

.c0 .DayPicker__horizontal > div > div:first-child {
  width: 258px !important;
}

.c0 .DayPicker__verticalScrollable {
  height: 100%;
}

.c0 .DayPicker__hidden {
  visibility: hidden;
}

.c0 .DayPicker__withBorder {
  box-shadow: 0 2px 6px rgba(0,0,0,0.05), 0 0 0 1px rgba(0,0,0,0.07);
  border-radius: 3px;
}

.c0 .DayPicker_portal__horizontal {
  box-shadow: none;
  position: absolute;
  left: 50%;
  top: 50%;
}

.c0 .DayPicker_portal__vertical {
  position: initial;
}

.c0 .DayPicker_focusRegion {
  outline: 0;
}

.c0 .DayPicker_calendarInfo__horizontal,
.c0 .DayPicker_wrapper__horizontal {
  display: inline-block;
  vertical-align: top;
}

.c0 .DayPicker_weekHeaders {
  position: relative;
  left: -9px !important;
}

.c0 .DayPicker_weekHeaders__horizontal {
  margin-left: 9px;
}

.c0 .DayPicker_weekHeader {
  border-bottom: solid 1px rgb(234,234,234);
  border-top: solid 1px rgb(234,234,234);
  position: absolute;
  top: 39px;
  z-index: 2;
  text-align: left;
  padding: 0px 11px 0px 10px !important;
}

.c0 .DayPicker_weekHeader__vertical {
  left: 50%;
}

.c0 .DayPicker_weekHeader__verticalScrollable {
  top: 0;
  display: table-row;
  border-bottom: 1px solid #dbdbdb;
  background: #fff;
  margin-left: 0;
  left: 0;
  width: 100%;
  text-align: center;
}

.c0 .DayPicker_weekHeader_ul {
  list-style: none;
  padding-left: 0;
  padding-right: 0;
  font-size: 14px;
}

.c0 .DayPicker_weekHeader_li {
  display: inline-block;
  text-align: center;
  margin-top: 8px;
  margin-bottom: 8px;
  width: 32px !important;
}

.c0 .DayPicker_weekHeader_li > small {
  font-size: 14px;
}

.c0 .DayPicker_transitionContainer {
  position: relative;
  overflow: hidden;
  border-radius: 6px;
  width: 245px !important;
}

.c0 .DayPicker_transitionContainer__horizontal {
  -webkit-transition: height 0.2s ease-in-out;
  -moz-transition: height 0.2s ease-in-out;
  -webkit-transition: height 0.2s ease-in-out;
  transition: height 0.2s ease-in-out;
}

.c0 .DayPicker_transitionContainer__vertical {
  width: 100%;
}

.c0 .DayPicker_transitionContainer__verticalScrollable {
  padding-top: 20px;
  height: 100%;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  overflow-y: scroll;
}

.c0 .DayPicker_transitionContainer__vertical {
  width: 100%;
}

.c0 .DayPicker_transitionContainer__verticalScrollable {
  padding-top: 20px;
  height: 100%;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  overflow-y: scroll;
}

.c0 .DateInput {
  height: 100%;
  background-color: transparent;
  margin: 0;
  position: relative;
  vertical-align: middle;
  display: contents;
  text-align: left;
}

.c0 .DateInput__small {
  width: 97px;
}

.c0 .DateInput__block {
  width: 100%;
}

.c0 .DateInput__disabled {
  background: #f2f2f2;
  color: #f2f2f2;
}

.c0 .DateInput_input {
  text-align: left;
  background-color: transparent;
  border: none;
  font-weight: 200;
  line-height: 24px;
  color: rgb(51,51,51);
  height: 100%;
  width: 112px;
  font-size: 14px;
}

.c0 .DateInput_input::-webkit-input-placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input::-moz-placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input:-ms-input-placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input::placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input__small {
  font-size: 14px;
  line-height: 18px;
  -webkit-letter-spacing: 0.2px;
  -moz-letter-spacing: 0.2px;
  -ms-letter-spacing: 0.2px;
  letter-spacing: 0.2px;
  padding: 7px 7px 5px;
}

.c0 .DateInput_input__regular {
  font-weight: auto;
}

.c0 .DateInput_input__readOnly {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c0 .DateInput_input__disabled {
  cursor: not-allowed;
  font-style: normal;
  color: rgb(153,153,153);
  border: 1px solid rgb(214,214,214);
  background: rgb(214,214,214);
}

.c0 .DateInput_input__disabled::-webkit-input-placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input__disabled::-moz-placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input__disabled:-ms-input-placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input__disabled::placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input__focused {
  outline: none;
  border-color: default:rgb(114,206,92);
  -n20: rgb(142,216,125);
  -n40: rgb(170,226,157);
  -n60: rgb(199,235,190);
  -n80: rgb(227,245,222);
  -n90: rgb(240,250,238);
  -n95: rgb(248,252,247);
  -p20: rgb(68,123,55);
  -p40: rgb(91,164,73);
  -p60: rgb(114,206,92);
}

.c0 .DateInput_screenReaderMessage {
  border: 0;
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.c0 .DateInput_fang {
  display: none;
  position: absolute;
  width: 20px;
  height: 10px;
  left: 22px;
  z-index: 2;
}

.c0 .DateInput_fangShape {
  fill: #fff;
}

.c0 .DateInput_fangStroke {
  stroke: #dbdbdb;
  fill: transparent;
}

.c0 .DateRangePickerInput {
  background-color: #fff;
  display: inline-block;
}

.c0 .DateRangePickerInput__disabled {
  background: #f2f2f2;
}

.c0 .DateRangePickerInput__withBorder {
  border-radius: 2px;
  border: 1px solid #dbdbdb;
}

.c0 .DateRangePickerInput__rtl {
  direction: rtl;
}

.c0 .DateRangePickerInput__block {
  display: block;
}

.c0 .DateRangePickerInput__showClearDates {
  padding-right: 30px;
}

.c0 .DateRangePickerInput_arrow {
  display: inline-block;
  vertical-align: middle;
  color: rgb(51,51,51);
  width: 12px;
}

.c0 .DateRangePickerInput_arrow_svg {
  vertical-align: middle;
  fill: rgb(51,51,51);
  height: 24px;
  width: 24px;
}

.c0 .DateRangePickerInput_clearDates {
  background: 0 0;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  cursor: pointer;
  padding: 10px;
  margin: 0 10px 0 5px;
  position: absolute;
  right: 0;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

.c0 .DateRangePickerInput_clearDates__small {
  padding: 6px;
}

.c0 .DateRangePickerInput_clearDates_default:focus,
.c0 .DateRangePickerInput_clearDates_default:hover {
  background: #dbdbdb;
  border-radius: 50%;
}

.c0 .DateRangePickerInput_clearDates__hide {
  visibility: hidden;
}

.c0 .DateRangePickerInput_clearDates_svg {
  fill: #82888a;
  height: 12px;
  width: 15px;
  vertical-align: middle;
}

.c0 .DateRangePickerInput_clearDates_svg__small {
  height: 9px;
}

.c0 .DateRangePickerInput_calendarIcon {
  background: 0 0;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  cursor: pointer;
  display: inline-block;
  vertical-align: middle;
  padding: 10px;
  margin: 0 5px 0 10px;
}

.c0 .DateRangePickerInput_calendarIcon_svg {
  fill: #82888a;
  height: 15px;
  width: 14px;
  vertical-align: middle;
}

.c0 .DateRangePicker {
  position: relative;
  display: inline-block;
}

.c0 .DateRangePicker__block {
  display: block;
}

.c0 .DateRangePicker_picker {
  z-index: 1;
  background-color: #fff;
  position: absolute;
}

.c0 .DateRangePicker_picker__rtl {
  direction: rtl;
}

.c0 .DateRangePicker_picker__directionLeft {
  left: 0;
}

.c0 .DateRangePicker_picker__directionRight {
  right: 0;
}

.c0 .DateRangePicker_picker__portal {
  background-color: rgba(0,0,0,0.3);
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
}

.c0 .DateRangePicker_picker__fullScreenPortal {
  background-color: #fff;
}

.c0 .DateRangePicker_closeButton {
  background: 0 0;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  cursor: pointer;
  position: absolute;
  top: 0;
  right: 0;
  padding: 15px;
  z-index: 2;
}

.c0 .DateRangePicker_closeButton:focus,
.c0 .DateRangePicker_closeButton:hover {
  color: darken(#cacccd,10%);
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c0 .DateRangePicker_closeButton_svg {
  height: 15px;
  width: 15px;
  fill: #cacccd;
}

<div
  className="c0"
  disabled={false}
  width="100%"
>
  <div
    className="SingleDatePicker SingleDatePicker_1"
  >
    <div>
      <div
        className="SingleDatePickerInput SingleDatePickerInput_1 SingleDatePickerInput__withBorder SingleDatePickerInput__withBorder_2"
      >
        <button
          className="SingleDatePickerInput_calendarIcon SingleDatePickerInput_calendarIcon_1"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          <div
            className="c1"
            color="#333"
            dangerouslySetInnerHTML={
              Object {
                "__html": undefined,
              }
            }
            size="24px"
          />
        </button>
        <div
          className="DateInput DateInput_1"
        >
          <input
            aria-describedby="DateInput__screen-reader-message-date"
            aria-label=""
            autoComplete="off"
            className="DateInput_input DateInput_input_1"
            disabled={false}
            id="date"
            name="date"
            onChange={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            placeholder=""
            readOnly={false}
            required={false}
            type="text"
            value=""
          />
          <p
            className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
            id="DateInput__screen-reader-message-date"
          >
            Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Datepicker Standard 1`] = `
.c1 {
  height: 24px;
  width: 24px;
}

.c1 svg {
  height: 24px;
  width: 24px;
}

.c1 #fill {
  fill: #333;
}

.c0 .PresetDateRangePicker_panel {
  padding: 0 22px 11px;
}

.c0 .PresetDateRangePicker_button {
  position: relative;
  height: 100%;
  text-align: center;
  background: 0 0;
  border: 2px solid #00a699;
  color: #00a699;
  padding: 4px 12px;
  margin-right: 8px;
  font: inherit;
  font-weight: 700;
  line-height: normal;
  overflow: visible;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  cursor: pointer;
}

.c0 .PresetDateRangePicker_button:active {
  outline: 0;
}

.c0 .PresetDateRangePicker_button__selected {
  color: #fff;
  background: #00a699;
}

.c0 .SingleDatepicker {
  width: 100%;
}

.c0 .SingleDatePickerInput {
  height: 40px;
  border: solid 1px rgb(234,234,234);
  border-radius: 6px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  padding: 0 12px;
  -webkit-transition: all 0.15s;
  transition: all 0.15s;
}

.c0 .SingleDatePickerInput__disabled {
  font-style: normal;
  color: rgb(214,214,214);
  cursor: not-allow;
  border: 1px solid rgb(214,214,214);
  background: rgb(214,214,214);
}

.c0 .SingleDatePickerInput_calendarIcon {
  border: none;
  outline: none;
  padding: 0 4px 0 0;
  cursor: pointer;
  background: rgb(255,255,255);
}

.c0 .SingleDatePickerInput_calendarIcon_svg {
  cursor: pointer;
}

.c0 .SingleDatePicker {
  position: relative;
  display: inline-block;
}

.c0 .SingleDatePicker > div {
  height: 100%;
  width: 100%;
}

.c0 .SingleDatePicker__block {
  display: block;
}

.c0 .SingleDatePicker_picker {
  z-index: 1;
  background-color: #fff;
  position: absolute;
  top: 48px !important;
}

.c0 .SingleDatePicker_picker__rtl {
  direction: rtl;
}

.c0 .SingleDatePicker_picker__directionLeft {
  left: 0;
}

.c0 .SingleDatePicker_picker__directionRight {
  right: 0;
}

.c0 .SingleDatePicker_picker__portal {
  background-color: rgba(0,0,0,0.3);
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
}

.c0 .SingleDatePicker_picker__fullScreenPortal {
  background-color: #fff;
}

.c0 .SingleDatePicker_closeButton {
  background: 0 0;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  cursor: pointer;
  position: absolute;
  top: 0;
  right: 0;
  padding: 15px;
  z-index: 2;
}

.c0 .SingleDatePicker_closeButton:focus,
.c0 .SingleDatePicker_closeButton:hover {
  color: darken(#cacccd,10%);
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c0 .SingleDatePicker_closeButton_svg {
  height: 15px;
  width: 15px;
  fill: #cacccd;
}

.c0 .DayPickerKeyboardShortcuts_buttonReset {
  display: none;
}

.c0 .DayPickerKeyboardShortcuts_buttonReset:active {
  outline: 0;
}

.c0 .DayPickerKeyboardShortcuts_show {
  width: 33px;
  height: 26px;
  position: absolute;
  z-index: 2;
}

.c0 .DayPickerKeyboardShortcuts_show::before {
  content: '';
  display: block;
  position: absolute;
}

.c0 .DayPickerKeyboardShortcuts_show__bottomRight {
  bottom: 0;
  right: 0;
}

.c0 .DayPickerKeyboardShortcuts_show__bottomRight::before {
  border-top: 26px solid transparent;
  border-right: 33px solid #00a699;
  bottom: 0;
  right: 0;
}

.c0 .DayPickerKeyboardShortcuts_show__bottomRight:hover::before {
  border-right: 33px solid #008489;
}

.c0 .DayPickerKeyboardShortcuts_show__topRight {
  top: 0;
  right: 0;
}

.c0 .DayPickerKeyboardShortcuts_show__topRight::before {
  border-bottom: 26px solid transparent;
  border-right: 33px solid #00a699;
  top: 0;
  right: 0;
}

.c0 .DayPickerKeyboardShortcuts_show__topRight:hover::before {
  border-right: 33px solid #008489;
}

.c0 .DayPickerKeyboardShortcuts_show__topLeft {
  top: 0;
  left: 0;
}

.c0 .DayPickerKeyboardShortcuts_show__topLeft::before {
  border-bottom: 26px solid transparent;
  border-left: 33px solid #00a699;
  top: 0;
  left: 0;
}

.c0 .DayPickerKeyboardShortcuts_show__topLeft:hover::before {
  border-left: 33px solid #008489;
}

.c0 .DayPickerKeyboardShortcuts_showSpan {
  color: #fff;
  position: absolute;
}

.c0 .DayPickerKeyboardShortcuts_showSpan__bottomRight {
  bottom: 0;
  right: 5px;
}

.c0 .DayPickerKeyboardShortcuts_showSpan__topRight {
  top: 1px;
  right: 5px;
}

.c0 .DayPickerKeyboardShortcuts_showSpan__topLeft {
  top: 1px;
  left: 5px;
}

.c0 .DayPickerKeyboardShortcuts_panel {
  overflow: auto;
  background: #fff;
  border: 1px solid #dbdbdb;
  border-radius: 2px;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  z-index: 2;
  padding: 22px;
  margin: 33px;
  text-align: left;
}

.c0 .DayPickerKeyboardShortcuts_title {
  font-size: 14px;
  font-weight: 700;
  margin: 0;
}

.c0 .DayPickerKeyboardShortcuts_list {
  list-style: none;
  padding: 0;
  font-size: 14px;
}

.c0 .DayPickerKeyboardShortcuts_close {
  position: absolute;
  right: 22px;
  top: 22px;
  z-index: 2;
}

.c0 .DayPickerKeyboardShortcuts_close:active {
  outline: 0;
}

.c0 .DayPickerKeyboardShortcuts_closeSvg {
  height: 15px;
  width: 15px;
  fill: #cacccd;
}

.c0 .DayPickerKeyboardShortcuts_closeSvg:focus,
.c0 .DayPickerKeyboardShortcuts_closeSvg:hover {
  fill: #82888a;
}

.c0 td.CalendarDay {
  width: 32px !important;
  height: 32px !important;
  padding: 6px 6px;
}

.c0 td.CalendarDay__default {
  width: 44px;
  height: 44px;
  marging-top: 12px;
  marging-bottom: 12px;
}

.c0 .CalendarDay {
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  cursor: pointer;
  font-size: 14px;
  text-align: center;
  margin-top: 12px;
  margin-bottom: 12px;
}

.c0 .CalendarDay:active {
  outline: 0;
}

.c0 .CalendarDay__defaultCursor {
  cursor: default;
}

.c0 .CalendarDay__default {
  color: rgb(51,51,51);
  background: #fff;
}

.c0 .CalendarDay__default:hover {
  background: #e4e7e7;
  color: inherit;
}

.c0 .CalendarDay__hovered_offset {
  background: #f4f5f5;
  border: 1px double #e4e7e7;
  color: inherit;
}

.c0 .CalendarDay__outside {
  border: 0;
  background: #fff;
  color: #d6d6d6;
}

.c0 .CalendarDay__outside:hover {
  border: 0;
}

.c0 .CalendarDay__blocked_minimum_nights {
  background: #fff;
  border: 1px solid #eceeee;
  color: #cacccd;
}

.c0 .CalendarDay__blocked_minimum_nights:active,
.c0 .CalendarDay__blocked_minimum_nights:hover {
  background: #fff;
  color: #cacccd;
}

.c0 .CalendarDay__highlighted_calendar {
  background: #ffe8bc;
  color: rgb(51,51,51);
}

.c0 .CalendarDay__highlighted_calendar:active,
.c0 .CalendarDay__highlighted_calendar:hover {
  background: #ffce71;
  color: rgb(51,51,51);
}

.c0 .CalendarDay__selected_span {
  background: #66e2da;
  border: 1px double #33dacd;
  color: #fff;
}

.c0 .CalendarDay__selected_span:active,
.c0 .CalendarDay__selected_span:hover {
  background: #33dacd;
  border: 1px double #33dacd;
  color: #fff;
}

.c0 .CalendarDay__selected,
.c0 .CalendarDay__selected:active,
.c0 .CalendarDay__selected:hover {
  background: #222222;
  color: #fff;
  border-radius: 70px;
}

.c0 .CalendarDay__hovered_span,
.c0 .CalendarDay__hovered_span:hover {
  background: #b2f1ec;
  border: 1px double #80e8e0;
  color: #007a87;
}

.c0 .CalendarDay__hovered_span:active {
  background: #80e8e0;
  border: 1px double #80e8e0;
  color: #007a87;
}

.c0 .CalendarDay__blocked_calendar,
.c0 .CalendarDay__blocked_calendar:active,
.c0 .CalendarDay__blocked_calendar:hover {
  background: #cacccd;
  border: 1px solid #cacccd;
  color: #82888a;
}

.c0 .CalendarDay__blocked_out_of_range,
.c0 .CalendarDay__blocked_out_of_range:active,
.c0 .CalendarDay__blocked_out_of_range:hover {
  background: #fff;
  color: #cacccd;
}

.c0 .CalendarDay__hovered_start_first_possible_end {
  background: #eceeee;
  border: 1px double #eceeee;
}

.c0 .CalendarDay__hovered_start_blocked_min_nights {
  background: #eceeee;
  border: 1px double #e4e7e7;
}

.c0 .CalendarMonth {
  padding: 0px 0px !important;
  background: #fff;
  text-align: center;
  vertical-align: top;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c0 .CalendarMonth_table {
  border-collapse: collapse;
  border-spacing: 0;
  margin-top: 40px;
}

.c0 .CalendarMonth_verticalSpacing {
  border-collapse: separate;
}

.c0 .CalendarMonth_caption {
  color: rgb(51,51,51);
  font-size: 14px;
  text-align: center;
  padding-top: 10px;
  padding-bottom: 12px;
  caption-side: initial;
}

.c0 .CalendarMonth_caption strong {
  font-weight: bold;
}

.c0 .CalendarMonth_caption__verticalScrollable {
  padding-top: 12px;
  padding-bottom: 7px;
}

.c0 .CalendarMonthGrid {
  background: #fff;
  text-align: left;
  z-index: 0;
}

.c0 .CalendarMonthGrid__animating {
  z-index: 1;
}

.c0 .CalendarMonthGrid__horizontal {
  position: absolute;
  left: 9px;
}

.c0 .CalendarMonthGrid__vertical {
  margin: 0 auto;
}

.c0 .CalendarMonthGrid__vertical_scrollable {
  margin: 0 auto;
  overflow-y: scroll;
}

.c0 .CalendarMonthGrid_month__horizontal {
  display: inline-block;
  vertical-align: top;
  min-height: 100%;
}

.c0 .CalendarMonthGrid_month__hideForAnimation {
  position: absolute;
  z-index: -1;
  opacity: 0;
  pointer-events: none;
}

.c0 .CalendarMonthGrid_month__hidden {
  visibility: hidden;
}

.c0 div.DayPickerNavigation div:first-of-type {
  padding-left: 7px;
}

.c0 div.DayPickerNavigation div:last-of-type {
  padding-right: 22px;
}

.c0 .DayPickerNavigation {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  z-index: 2;
}

.c0 .DayPickerNavigation__horizontal {
  height: 0;
}

.c0 .DayPickerNavigation__verticalDefault {
  position: absolute;
  width: 100%;
  height: 52px;
  bottom: 0;
  left: 0;
}

.c0 .DayPickerNavigation__verticalScrollableDefault {
  position: relative;
}

.c0 .DayPickerNavigation__bottom {
  height: auto;
}

.c0 .DayPickerNavigation__bottomDefault {
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: space-between;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c0 .DayPickerNavigation_button {
  padding-right: 12px;
  padding-top: 8px;
  padding-left: 12px;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  border: 0;
  margin: 0;
}

.c0 .DayPickerNavigation_button__default {
  border: 1px solid #e4e7e7;
  background-color: #fff;
  color: #757575;
}

.c0 .DayPickerNavigation_button__default:focus,
.c0 .DayPickerNavigation_button__default:hover {
  border: 1px solid #c4c4c4;
}

.c0 .DayPickerNavigation_button__default:active {
  background: #f2f2f2;
}

.c0 .DayPickerNavigation_button__disabled {
  cursor: not-allowed;
  font-style: normal;
  color: rgb(153,153,153);
  border: 1px solid rgb(214,214,214);
  background: rgb(214,214,214);
}

.c0 .DayPickerNavigation_button__disabled:focus,
.c0 .DayPickerNavigation_button__disabled:hover {
  cursor: not-allowed;
  border: 1px solid rgb(214,214,214);
}

.c0 .DayPickerNavigation_button__disabled:active {
  background: 0 0;
}

.c0 .DayPickerNavigation_button__horizontalDefault {
  position: absolute;
  top: 18px;
  line-height: 0.78;
  border-radius: 3px;
  padding: 6px 9px;
}

.c0 .DayPickerNavigation_bottomButton__horizontalDefault {
  position: static;
  margin: -10px 22px 30px;
}

.c0 .DayPickerNavigation_leftButton__horizontalDefault {
  left: 22px;
}

.c0 .DayPickerNavigation_rightButton__horizontalDefault {
  right: 22px;
}

.c0 .DayPickerNavigation_button__verticalDefault {
  padding: 5px;
  background: #fff;
  box-shadow: 0 0 5px 2px rgba(0,0,0,0.1);
  position: relative;
  display: inline-block;
  text-align: center;
  height: 100%;
  width: 50%;
}

.c0 .DayPickerNavigation_nextButton__verticalDefault {
  border-left: 0;
}

.c0 .DayPickerNavigation_nextButton__verticalScrollableDefault {
  width: 100%;
}

.c0 .DayPickerNavigation_svg__horizontal {
  height: 19px;
  width: 19px;
  fill: #82888a;
  display: block;
}

.c0 .DayPickerNavigation_svg__vertical {
  height: 42px;
  width: 42px;
  fill: rgb(51,51,51);
}

.c0 .DayPickerNavigation_svg__disabled {
  fill: #f2f2f2;
}

.c0 .DayPicker {
  background: #fff;
  position: relative;
  text-align: left;
  width: 245px !important;
}

.c0 .DayPicker__horizontal {
  background: #fff;
}

.c0 .DayPicker__horizontal > div > div:first-child {
  width: 258px !important;
}

.c0 .DayPicker__verticalScrollable {
  height: 100%;
}

.c0 .DayPicker__hidden {
  visibility: hidden;
}

.c0 .DayPicker__withBorder {
  box-shadow: 0 2px 6px rgba(0,0,0,0.05), 0 0 0 1px rgba(0,0,0,0.07);
  border-radius: 3px;
}

.c0 .DayPicker_portal__horizontal {
  box-shadow: none;
  position: absolute;
  left: 50%;
  top: 50%;
}

.c0 .DayPicker_portal__vertical {
  position: initial;
}

.c0 .DayPicker_focusRegion {
  outline: 0;
}

.c0 .DayPicker_calendarInfo__horizontal,
.c0 .DayPicker_wrapper__horizontal {
  display: inline-block;
  vertical-align: top;
}

.c0 .DayPicker_weekHeaders {
  position: relative;
  left: -9px !important;
}

.c0 .DayPicker_weekHeaders__horizontal {
  margin-left: 9px;
}

.c0 .DayPicker_weekHeader {
  border-bottom: solid 1px rgb(234,234,234);
  border-top: solid 1px rgb(234,234,234);
  position: absolute;
  top: 39px;
  z-index: 2;
  text-align: left;
  padding: 0px 11px 0px 10px !important;
}

.c0 .DayPicker_weekHeader__vertical {
  left: 50%;
}

.c0 .DayPicker_weekHeader__verticalScrollable {
  top: 0;
  display: table-row;
  border-bottom: 1px solid #dbdbdb;
  background: #fff;
  margin-left: 0;
  left: 0;
  width: 100%;
  text-align: center;
}

.c0 .DayPicker_weekHeader_ul {
  list-style: none;
  padding-left: 0;
  padding-right: 0;
  font-size: 14px;
}

.c0 .DayPicker_weekHeader_li {
  display: inline-block;
  text-align: center;
  margin-top: 8px;
  margin-bottom: 8px;
  width: 32px !important;
}

.c0 .DayPicker_weekHeader_li > small {
  font-size: 14px;
}

.c0 .DayPicker_transitionContainer {
  position: relative;
  overflow: hidden;
  border-radius: 6px;
  width: 245px !important;
}

.c0 .DayPicker_transitionContainer__horizontal {
  -webkit-transition: height 0.2s ease-in-out;
  -moz-transition: height 0.2s ease-in-out;
  -webkit-transition: height 0.2s ease-in-out;
  transition: height 0.2s ease-in-out;
}

.c0 .DayPicker_transitionContainer__vertical {
  width: 100%;
}

.c0 .DayPicker_transitionContainer__verticalScrollable {
  padding-top: 20px;
  height: 100%;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  overflow-y: scroll;
}

.c0 .DayPicker_transitionContainer__vertical {
  width: 100%;
}

.c0 .DayPicker_transitionContainer__verticalScrollable {
  padding-top: 20px;
  height: 100%;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  overflow-y: scroll;
}

.c0 .DateInput {
  height: 100%;
  background-color: transparent;
  margin: 0;
  position: relative;
  vertical-align: middle;
  display: contents;
  text-align: left;
}

.c0 .DateInput__small {
  width: 97px;
}

.c0 .DateInput__block {
  width: 100%;
}

.c0 .DateInput__disabled {
  background: #f2f2f2;
  color: #f2f2f2;
}

.c0 .DateInput_input {
  text-align: left;
  background-color: transparent;
  border: none;
  font-weight: 200;
  line-height: 24px;
  color: rgb(51,51,51);
  height: 100%;
  width: 112px;
  font-size: 14px;
}

.c0 .DateInput_input::-webkit-input-placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input::-moz-placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input:-ms-input-placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input::placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input__small {
  font-size: 14px;
  line-height: 18px;
  -webkit-letter-spacing: 0.2px;
  -moz-letter-spacing: 0.2px;
  -ms-letter-spacing: 0.2px;
  letter-spacing: 0.2px;
  padding: 7px 7px 5px;
}

.c0 .DateInput_input__regular {
  font-weight: auto;
}

.c0 .DateInput_input__readOnly {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c0 .DateInput_input__disabled {
  cursor: not-allowed;
  font-style: normal;
  color: rgb(153,153,153);
  border: 1px solid rgb(214,214,214);
  background: rgb(214,214,214);
}

.c0 .DateInput_input__disabled::-webkit-input-placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input__disabled::-moz-placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input__disabled:-ms-input-placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input__disabled::placeholder {
  color: rgb(153,153,153);
}

.c0 .DateInput_input__focused {
  outline: none;
  border-color: default:rgb(114,206,92);
  -n20: rgb(142,216,125);
  -n40: rgb(170,226,157);
  -n60: rgb(199,235,190);
  -n80: rgb(227,245,222);
  -n90: rgb(240,250,238);
  -n95: rgb(248,252,247);
  -p20: rgb(68,123,55);
  -p40: rgb(91,164,73);
  -p60: rgb(114,206,92);
}

.c0 .DateInput_screenReaderMessage {
  border: 0;
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.c0 .DateInput_fang {
  display: none;
  position: absolute;
  width: 20px;
  height: 10px;
  left: 22px;
  z-index: 2;
}

.c0 .DateInput_fangShape {
  fill: #fff;
}

.c0 .DateInput_fangStroke {
  stroke: #dbdbdb;
  fill: transparent;
}

.c0 .DateRangePickerInput {
  background-color: #fff;
  display: inline-block;
}

.c0 .DateRangePickerInput__disabled {
  background: #f2f2f2;
}

.c0 .DateRangePickerInput__withBorder {
  border-radius: 2px;
  border: 1px solid #dbdbdb;
}

.c0 .DateRangePickerInput__rtl {
  direction: rtl;
}

.c0 .DateRangePickerInput__block {
  display: block;
}

.c0 .DateRangePickerInput__showClearDates {
  padding-right: 30px;
}

.c0 .DateRangePickerInput_arrow {
  display: inline-block;
  vertical-align: middle;
  color: rgb(51,51,51);
  width: 12px;
}

.c0 .DateRangePickerInput_arrow_svg {
  vertical-align: middle;
  fill: rgb(51,51,51);
  height: 24px;
  width: 24px;
}

.c0 .DateRangePickerInput_clearDates {
  background: 0 0;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  cursor: pointer;
  padding: 10px;
  margin: 0 10px 0 5px;
  position: absolute;
  right: 0;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

.c0 .DateRangePickerInput_clearDates__small {
  padding: 6px;
}

.c0 .DateRangePickerInput_clearDates_default:focus,
.c0 .DateRangePickerInput_clearDates_default:hover {
  background: #dbdbdb;
  border-radius: 50%;
}

.c0 .DateRangePickerInput_clearDates__hide {
  visibility: hidden;
}

.c0 .DateRangePickerInput_clearDates_svg {
  fill: #82888a;
  height: 12px;
  width: 15px;
  vertical-align: middle;
}

.c0 .DateRangePickerInput_clearDates_svg__small {
  height: 9px;
}

.c0 .DateRangePickerInput_calendarIcon {
  background: 0 0;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  cursor: pointer;
  display: inline-block;
  vertical-align: middle;
  padding: 10px;
  margin: 0 5px 0 10px;
}

.c0 .DateRangePickerInput_calendarIcon_svg {
  fill: #82888a;
  height: 15px;
  width: 14px;
  vertical-align: middle;
}

.c0 .DateRangePicker {
  position: relative;
  display: inline-block;
}

.c0 .DateRangePicker__block {
  display: block;
}

.c0 .DateRangePicker_picker {
  z-index: 1;
  background-color: #fff;
  position: absolute;
}

.c0 .DateRangePicker_picker__rtl {
  direction: rtl;
}

.c0 .DateRangePicker_picker__directionLeft {
  left: 0;
}

.c0 .DateRangePicker_picker__directionRight {
  right: 0;
}

.c0 .DateRangePicker_picker__portal {
  background-color: rgba(0,0,0,0.3);
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
}

.c0 .DateRangePicker_picker__fullScreenPortal {
  background-color: #fff;
}

.c0 .DateRangePicker_closeButton {
  background: 0 0;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  cursor: pointer;
  position: absolute;
  top: 0;
  right: 0;
  padding: 15px;
  z-index: 2;
}

.c0 .DateRangePicker_closeButton:focus,
.c0 .DateRangePicker_closeButton:hover {
  color: darken(#cacccd,10%);
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c0 .DateRangePicker_closeButton_svg {
  height: 15px;
  width: 15px;
  fill: #cacccd;
}

<div
  className="c0"
  disabled={false}
  width="100%"
>
  <div
    className="SingleDatePicker SingleDatePicker_1"
  >
    <div>
      <div
        className="SingleDatePickerInput SingleDatePickerInput_1 SingleDatePickerInput__withBorder SingleDatePickerInput__withBorder_2"
      >
        <button
          className="SingleDatePickerInput_calendarIcon SingleDatePickerInput_calendarIcon_1"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          <div
            className="c1"
            color="#333"
            dangerouslySetInnerHTML={
              Object {
                "__html": undefined,
              }
            }
            size="24px"
          />
        </button>
        <div
          className="DateInput DateInput_1"
        >
          <input
            aria-describedby="DateInput__screen-reader-message-date"
            aria-label=""
            autoComplete="off"
            className="DateInput_input DateInput_input_1"
            disabled={false}
            id="date"
            name="date"
            onChange={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            placeholder=""
            readOnly={false}
            required={false}
            type="text"
            value="2019年12月25日"
          />
          <p
            className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
            id="DateInput__screen-reader-message-date"
          >
            Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/DropdownMultiple Input 1`] = `
.c5 {
  height: 24px;
  width: 24px;
}

.c5 svg {
  height: 24px;
  width: 24px;
}

.c4 {
  cursor: pointer;
}

.c6 {
  position: absolute;
  right: 12px;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  -webkit-transition: 0.2s;
  transition: 0.2s;
  cursor: pointer;
}

.c6.visible {
  -webkit-transform: translateY(-50%) rotate(180deg);
  -ms-transform: translateY(-50%) rotate(180deg);
  transform: translateY(-50%) rotate(180deg);
}

.c2 {
  min-height: 40px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 0 12px;
  border: 1px solid rgb(234,234,234);
  border-radius: 6px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-size: 14px;
  cursor: pointer;
  background-color: inherit;
}

.c3 {
  padding: 5px 4px 5px 0;
  word-break: break-word;
  width: calc(100% - 28px);
  color: rgb(51,51,51);
}

.c7 {
  display: block;
  background: rgb(255,255,255);
  border-radius: 6px;
  box-shadow: 0 5px 11px rgba(0,0,0,0.16);
  max-height: 204px;
  overflow-y: auto;
  z-index: 1;
}

.c9 {
  padding: 12px;
}

.c0 {
  width: 250px;
}

.c1 {
  position: relative;
}

.c8 {
  width: 100%;
  position: absolute;
  right: 0;
  margin-top: 4px;
  -webkit-transform-origin: top;
  -ms-transform-origin: top;
  transform-origin: top;
  -webkit-transition: 0.2s;
  transition: 0.2s;
  visibility: hidden;
  -webkit-transform: scaleY(0);
  -ms-transform: scaleY(0);
  transform: scaleY(0);
}

<div
  className="ml-20 mt-10"
>
  <div
    className="c0"
    width="250px"
  >
    <div
      className="c1"
    >
      <div>
        <div
          className="c2"
          data-test="body"
          disabled={false}
          onClick={[Function]}
        >
          <div
            className="c3"
            data-test="text"
            disabled={false}
          >
            選択してください
          </div>
        </div>
        <div
          className="c4"
          onClick={[Function]}
        >
          <div
            className="c5 c6"
            dangerouslySetInnerHTML={
              Object {
                "__html": undefined,
              }
            }
            size="24px"
          />
        </div>
        <ul
          className="c7 c8"
          data-test="itemList"
        >
          <div
            className="c9"
          />
        </ul>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/DropdownMultiple Multi 1`] = `
.c5 {
  height: 24px;
  width: 24px;
}

.c5 svg {
  height: 24px;
  width: 24px;
}

.c4 {
  cursor: pointer;
}

.c6 {
  position: absolute;
  right: 12px;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  -webkit-transition: 0.2s;
  transition: 0.2s;
  cursor: pointer;
}

.c6.visible {
  -webkit-transform: translateY(-50%) rotate(180deg);
  -ms-transform: translateY(-50%) rotate(180deg);
  transform: translateY(-50%) rotate(180deg);
}

.c2 {
  min-height: 40px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 0 12px;
  border: 1px solid rgb(234,234,234);
  border-radius: 6px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-size: 14px;
  cursor: pointer;
  background-color: inherit;
}

.c3 {
  padding: 5px 4px 5px 0;
  word-break: break-word;
  width: calc(100% - 28px);
  color: rgb(51,51,51);
}

.c7 {
  display: block;
  background: rgb(255,255,255);
  border-radius: 6px;
  box-shadow: 0 5px 11px rgba(0,0,0,0.16);
  max-height: 204px;
  overflow-y: auto;
  z-index: 1;
}

.c9 {
  padding: 12px;
}

.c0 {
  width: 250px;
}

.c1 {
  position: relative;
}

.c8 {
  width: 100%;
  position: absolute;
  right: 0;
  margin-top: 4px;
  -webkit-transform-origin: top;
  -ms-transform-origin: top;
  transform-origin: top;
  -webkit-transition: 0.2s;
  transition: 0.2s;
  visibility: hidden;
  -webkit-transform: scaleY(0);
  -ms-transform: scaleY(0);
  transform: scaleY(0);
}

<div
  className="ml-20 mt-10"
>
  <div
    className="c0"
    width="250px"
  >
    <div
      className="c1"
    >
      <div>
        <div
          className="c2"
          data-test="body"
          disabled={false}
          onClick={[Function]}
        >
          <div
            className="c3"
            data-test="text"
            disabled={false}
          >
            選択してください
          </div>
        </div>
        <div
          className="c4"
          onClick={[Function]}
        >
          <div
            className="c5 c6"
            dangerouslySetInnerHTML={
              Object {
                "__html": undefined,
              }
            }
            size="24px"
          />
        </div>
        <ul
          className="c7 c8"
          data-test="itemList"
        >
          <div
            className="c9"
          />
        </ul>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/DropdownMultipleHierarchy Default 1`] = `
.c5 {
  height: 24px;
  width: 24px;
}

.c5 svg {
  height: 24px;
  width: 24px;
}

.c4 {
  cursor: pointer;
}

.c6 {
  position: absolute;
  right: 12px;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  -webkit-transition: 0.2s;
  transition: 0.2s;
  cursor: pointer;
}

.c6.visible {
  -webkit-transform: translateY(-50%) rotate(180deg);
  -ms-transform: translateY(-50%) rotate(180deg);
  transform: translateY(-50%) rotate(180deg);
}

.c2 {
  min-height: 40px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0px 12px;
  border: 1px solid rgb(234,234,234);
  border-radius: 6px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-size: 14px;
  cursor: pointer;
  background-color: inherit;
}

.c3 {
  padding: 4px 4px 4px 0;
  word-break: break-word;
  width: calc(100% - 28px);
  max-height: 110px;
  overflow-y: scroll;
  color: rgb(51,51,51);
}

.c7 {
  display: block;
  background: rgb(255,255,255);
  border-radius: 6px;
  box-shadow: 0 5px 11px rgba(0,0,0,0.16);
  max-height: 240px;
  overflow-y: auto;
}

.c7 > .c10 {
  margin-left: 12px;
}

.c9 {
  margin-left: 25px;
}

.c11 {
  list-style-type: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-size: 14px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  cursor: pointer;
  white-space: nowrap;
  padding: 4px 0;
}

.c11:hover {
  color: rgb(51,51,51);
}

.c13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-left: 6px;
}

.c12 {
  -webkit-transform: rotate(-90deg);
  -ms-transform: rotate(-90deg);
  transform: rotate(-90deg);
}

.c14 #fill {
  fill: rgb(8,135,54);
}

.c14 #fill .disabled {
  fill: rgb(214,214,214);
}

.c15 {
  padding-left: 4px;
  word-break: break-word;
  padding-right: 10px;
}

.c0 {
  width: 250px;
}

.c1 {
  position: relative;
}

.c8 {
  min-width: 100%;
  max-width: calc(24px + 28px + 420px);
  position: absolute;
  left: 0;
  margin-top: 4px;
  -webkit-transform-origin: top;
  -ms-transform-origin: top;
  transform-origin: top;
  -webkit-transition: 0.2s;
  transition: 0.2s;
  visibility: hidden;
  -webkit-transform: scaleY(0);
  -ms-transform: scaleY(0);
  transform: scaleY(0);
}

<div
  className="ml-20 mt-10"
>
  <div
    className="c0"
    width="250px"
  >
    <div
      className="c1"
    >
      <div>
        <div
          className="c2"
          data-test="body"
          disabled={false}
          onClick={[Function]}
        >
          <div
            className="c3"
            data-test="selectedItems"
            disabled={false}
          >
            選択してください
          </div>
        </div>
        <div
          className="c4"
          onClick={[Function]}
        >
          <div
            className="c5 c6"
            dangerouslySetInnerHTML={
              Object {
                "__html": undefined,
              }
            }
            size="24px"
          />
        </div>
        <div
          className="c7 c8"
        >
          <ul
            className="c9 c10 "
          >
            <li
              className="c11"
            >
              <div
                className=""
                onClick={[Function]}
              >
                <div
                  className="c5 c12"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": undefined,
                    }
                  }
                  size="24px"
                />
              </div>
              <div
                className="c13"
                data-test="item-clickArea"
                onClick={[Function]}
              >
                <div
                  className="c5 c14"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": undefined,
                    }
                  }
                  size="24px"
                />
                <div
                  className="c15"
                >
                  部署1
                </div>
              </div>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/DropdownMultipleHierarchy With Initial Value 1`] = `
.c6 {
  height: 24px;
  width: 24px;
}

.c6 svg {
  height: 24px;
  width: 24px;
}

.c5 {
  cursor: pointer;
}

.c7 {
  position: absolute;
  right: 12px;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  -webkit-transition: 0.2s;
  transition: 0.2s;
  cursor: pointer;
}

.c7.visible {
  -webkit-transform: translateY(-50%) rotate(180deg);
  -ms-transform: translateY(-50%) rotate(180deg);
  transform: translateY(-50%) rotate(180deg);
}

.c2 {
  min-height: 40px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0px 12px;
  border: 1px solid rgb(234,234,234);
  border-radius: 6px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-size: 14px;
  cursor: pointer;
  background-color: inherit;
}

.c3 {
  padding: 4px 4px 4px 0;
  word-break: break-word;
  width: calc(100% - 28px);
  max-height: 110px;
  overflow-y: scroll;
  color: rgb(51,51,51);
}

.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: rgb(245,245,245);
  color: rgb(51,51,51);
  padding: 6.5px 8px;
  margin: 4px 8px 4px 0px;
  border-radius: 20px;
  font-weight: bold;
  line-height: 1;
}

.c8 {
  display: block;
  background: rgb(255,255,255);
  border-radius: 6px;
  box-shadow: 0 5px 11px rgba(0,0,0,0.16);
  max-height: 240px;
  overflow-y: auto;
}

.c8 > .c11 {
  margin-left: 12px;
}

.c10 {
  margin-left: 25px;
}

.c12 {
  list-style-type: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-size: 14px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  cursor: pointer;
  white-space: nowrap;
  padding: 4px 0;
}

.c12:hover {
  color: rgb(51,51,51);
}

.c14 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-left: 6px;
}

.c13 {
  -webkit-transform: rotate(-90deg);
  -ms-transform: rotate(-90deg);
  transform: rotate(-90deg);
}

.c15 #fill {
  fill: rgb(8,135,54);
}

.c15 #fill .disabled {
  fill: rgb(214,214,214);
}

.c16 {
  padding-left: 4px;
  word-break: break-word;
  padding-right: 10px;
}

.c0 {
  width: 250px;
}

.c1 {
  position: relative;
}

.c9 {
  min-width: 100%;
  max-width: calc(24px + 28px + 420px);
  position: absolute;
  left: 0;
  margin-top: 4px;
  -webkit-transform-origin: top;
  -ms-transform-origin: top;
  transform-origin: top;
  -webkit-transition: 0.2s;
  transition: 0.2s;
  visibility: hidden;
  -webkit-transform: scaleY(0);
  -ms-transform: scaleY(0);
  transform: scaleY(0);
}

<div
  className="ml-20 mt-10"
>
  <div
    className="c0"
    width="250px"
  >
    <div
      className="c1"
    >
      <div>
        <div
          className="c2"
          data-test="body"
          disabled={false}
          onClick={[Function]}
        >
          <div
            className="c3"
            data-test="selectedItems"
            disabled={false}
          >
            <div
              className="c4"
            >
              部署1
            </div>
            <div
              className="c4"
            >
              部署1-1
            </div>
          </div>
        </div>
        <div
          className="c5"
          onClick={[Function]}
        >
          <div
            className="c6 c7"
            dangerouslySetInnerHTML={
              Object {
                "__html": undefined,
              }
            }
            size="24px"
          />
        </div>
        <div
          className="c8 c9"
        >
          <ul
            className="c10 c11 "
          >
            <li
              className="c12"
            >
              <div
                className=""
                onClick={[Function]}
              >
                <div
                  className="c6 c13"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": undefined,
                    }
                  }
                  size="24px"
                />
              </div>
              <div
                className="c14"
                data-test="item-clickArea"
                onClick={[Function]}
              >
                <div
                  className="c6 c15"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": undefined,
                    }
                  }
                  size="24px"
                />
                <div
                  className="c16"
                >
                  部署1
                </div>
              </div>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/DropdownMultipleHierarchy 組織図サンプル 1`] = `
.c5 {
  height: 24px;
  width: 24px;
}

.c5 svg {
  height: 24px;
  width: 24px;
}

.c4 {
  cursor: pointer;
}

.c6 {
  position: absolute;
  right: 12px;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  -webkit-transition: 0.2s;
  transition: 0.2s;
  cursor: pointer;
}

.c6.visible {
  -webkit-transform: translateY(-50%) rotate(180deg);
  -ms-transform: translateY(-50%) rotate(180deg);
  transform: translateY(-50%) rotate(180deg);
}

.c2 {
  min-height: 40px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0px 12px;
  border: 1px solid rgb(234,234,234);
  border-radius: 6px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-size: 14px;
  cursor: pointer;
  background-color: inherit;
}

.c3 {
  padding: 4px 4px 4px 0;
  word-break: break-word;
  width: calc(100% - 28px);
  max-height: 110px;
  overflow-y: scroll;
  color: rgb(51,51,51);
}

.c7 {
  display: block;
  background: rgb(255,255,255);
  border-radius: 6px;
  box-shadow: 0 5px 11px rgba(0,0,0,0.16);
  max-height: 240px;
  overflow-y: auto;
}

.c7 > .c10 {
  margin-left: 12px;
}

.c9 {
  margin-left: 25px;
}

.c11 {
  list-style-type: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-size: 14px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  cursor: pointer;
  white-space: nowrap;
  padding: 4px 0;
}

.c11:hover {
  color: rgb(51,51,51);
}

.c13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-left: 6px;
}

.c16 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-left: 30px;
}

.c12 {
  -webkit-transform: rotate(-90deg);
  -ms-transform: rotate(-90deg);
  transform: rotate(-90deg);
}

.c14 #fill {
  fill: rgb(8,135,54);
}

.c14 #fill .disabled {
  fill: rgb(214,214,214);
}

.c15 {
  padding-left: 4px;
  word-break: break-word;
  padding-right: 10px;
}

.c0 {
  width: 250px;
}

.c1 {
  position: relative;
}

.c8 {
  min-width: 100%;
  max-width: calc(24px + 28px + 420px);
  position: absolute;
  left: 0;
  margin-top: 4px;
  -webkit-transform-origin: top;
  -ms-transform-origin: top;
  transform-origin: top;
  -webkit-transition: 0.2s;
  transition: 0.2s;
  visibility: hidden;
  -webkit-transform: scaleY(0);
  -ms-transform: scaleY(0);
  transform: scaleY(0);
}

<div
  className="ml-20 mt-10"
>
  <div
    className="c0"
    width="250px"
  >
    <div
      className="c1"
    >
      <div>
        <div
          className="c2"
          data-test="body"
          disabled={false}
          onClick={[Function]}
        >
          <div
            className="c3"
            data-test="selectedItems"
            disabled={false}
          >
            選択してください
          </div>
        </div>
        <div
          className="c4"
          onClick={[Function]}
        >
          <div
            className="c5 c6"
            dangerouslySetInnerHTML={
              Object {
                "__html": undefined,
              }
            }
            size="24px"
          />
        </div>
        <div
          className="c7 c8"
        >
          <ul
            className="c9 c10 "
          >
            <li
              className="c11"
            >
              <div
                className=""
                onClick={[Function]}
              >
                <div
                  className="c5 c12"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": undefined,
                    }
                  }
                  size="24px"
                />
              </div>
              <div
                className="c13"
                data-test="item-clickArea"
                onClick={[Function]}
              >
                <div
                  className="c5 c14"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": undefined,
                    }
                  }
                  size="24px"
                />
                <div
                  className="c15"
                >
                  ダミーHLDGS
                </div>
              </div>
            </li>
          </ul>
          <ul
            className="c9 c10 "
          >
            <li
              className="c11"
            >
              <div
                className="c16"
                data-test="item-clickArea"
                onClick={[Function]}
              >
                <div
                  className="c5 c14"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": undefined,
                    }
                  }
                  size="24px"
                />
                <div
                  className="c15"
                >
                  監査役
                </div>
              </div>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/DropdownSingle Borderless 1`] = `
.c4 {
  height: 24px;
  width: 24px;
}

.c4 svg {
  height: 24px;
  width: 24px;
}

.c6 {
  background: rgb(255,255,255);
  border-radius: 6px;
  box-shadow: 0 5px 11px rgba(0,0,0,0.16);
  max-height: 204px;
  overflow-y: auto;
  padding: 12px;
  z-index: 1;
}

.c0 {
  position: relative;
  width: 250px;
}

.c7 {
  position: absolute;
  margin-top: 4px;
  -webkit-transform-origin: top;
  -ms-transform-origin: top;
  transform-origin: top;
  -webkit-transition: 0.2s;
  transition: 0.2s;
  visibility: hidden;
  -webkit-transform: scaleY(0);
  -ms-transform: scaleY(0);
  transform: scaleY(0);
}

.c5 {
  position: absolute;
  right: 12px;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  -webkit-transition: 0.2s;
  transition: 0.2s;
}

.c5.visible {
  -webkit-transform: translateY(-50%) rotate(180deg);
  -ms-transform: translateY(-50%) rotate(180deg);
  transform: translateY(-50%) rotate(180deg);
}

.c1 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-radius: 6px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-size: 14px;
  cursor: pointer;
  background-color: inherit;
}

.c2 {
  padding-right: 4px;
  word-break: break-word;
  width: 100%;
  max-width: 210px;
}

.c3 {
  display: inline-block;
  padding-top: 1px;
}

<div
  className="ml-20 mt-10"
>
  <div
    className="c0"
    width="250px"
  >
    <div>
      <div
        className="c1"
        data-test="body"
        onClick={[Function]}
      >
        <div
          className="c2"
          data-test="text"
        >
          <span
            className="c3"
          >
            20
          </span>
        </div>
        <div
          className="c4 c5"
          dangerouslySetInnerHTML={
            Object {
              "__html": undefined,
            }
          }
          size="24px"
        />
      </div>
      <ul
        className="c6 c7"
        data-test="itemList"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/DropdownSingle Color 1`] = `
.c4 {
  height: 24px;
  width: 24px;
}

.c4 svg {
  height: 24px;
  width: 24px;
}

.c6 {
  background: rgb(255,255,255);
  border-radius: 6px;
  box-shadow: 0 5px 11px rgba(0,0,0,0.16);
  max-height: 204px;
  overflow-y: auto;
  padding: 12px;
  z-index: 1;
}

.c0 {
  width: 200px;
}

.c1 {
  position: relative;
}

.c5 {
  position: absolute;
  right: 12px;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  -webkit-transition: 0.2s;
  transition: 0.2s;
}

.c5.visible {
  -webkit-transform: translateY(-50%) rotate(180deg);
  -ms-transform: translateY(-50%) rotate(180deg);
  transform: translateY(-50%) rotate(180deg);
}

.c2 {
  min-height: 40px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 8px 12px;
  border: 1px solid rgb(234,234,234);
  border-radius: 6px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-size: 14px;
  cursor: pointer;
  background-color: inherit;
}

.c7 {
  position: absolute;
  left: 0;
  width: 100%;
  -webkit-transition: all 0.2s;
  transition: all 0.2s;
  -webkit-transform-origin: top;
  -ms-transform-origin: top;
  transform-origin: top;
  visibility: hidden;
  -webkit-transform: scaleY(0);
  -ms-transform: scaleY(0);
  transform: scaleY(0);
}

.c3 {
  padding-right: 4px;
  word-break: break-word;
  width: calc(100% - 28px);
}

<div
  className="ml-20 mt-10"
>
  <div
    className="c0"
    width="200px"
  >
    <div
      className="c1"
    >
      <div>
        <div
          className="c2"
          data-test="body"
          disabled={false}
          onClick={[Function]}
        >
          <div
            className="c3"
            data-test="text"
          />
          <div
            className=""
            onClick={[Function]}
          >
            <div
              className="c4 c5"
              dangerouslySetInnerHTML={
                Object {
                  "__html": undefined,
                }
              }
              size="24px"
            />
          </div>
        </div>
        <ul
          className="c6 c7"
          data-test="itemList"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/DropdownSingle Default 1`] = `
.c4 {
  height: 24px;
  width: 24px;
}

.c4 svg {
  height: 24px;
  width: 24px;
}

.c6 {
  background: rgb(255,255,255);
  border-radius: 6px;
  box-shadow: 0 5px 11px rgba(0,0,0,0.16);
  max-height: 204px;
  overflow-y: auto;
  padding: 12px;
  z-index: 1;
}

.c0 {
  width: 200px;
}

.c1 {
  position: relative;
}

.c5 {
  position: absolute;
  right: 12px;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  -webkit-transition: 0.2s;
  transition: 0.2s;
}

.c5.visible {
  -webkit-transform: translateY(-50%) rotate(180deg);
  -ms-transform: translateY(-50%) rotate(180deg);
  transform: translateY(-50%) rotate(180deg);
}

.c2 {
  min-height: 40px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 8px 12px;
  border: 1px solid rgb(234,234,234);
  border-radius: 6px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-size: 14px;
  cursor: pointer;
  background-color: inherit;
}

.c7 {
  position: absolute;
  left: 0;
  width: 100%;
  -webkit-transition: all 0.2s;
  transition: all 0.2s;
  -webkit-transform-origin: top;
  -ms-transform-origin: top;
  transform-origin: top;
  visibility: hidden;
  -webkit-transform: scaleY(0);
  -ms-transform: scaleY(0);
  transform: scaleY(0);
}

.c3 {
  padding-right: 4px;
  word-break: break-word;
  width: calc(100% - 28px);
}

<div
  className="ml-20 mt-10"
>
  <div
    className="c0"
    width="200px"
  >
    <div
      className="c1"
    >
      <div>
        <div
          className="c2"
          data-test="body"
          disabled={false}
          onClick={[Function]}
        >
          <div
            className="c3"
            data-test="text"
          />
          <div
            className=""
            onClick={[Function]}
          >
            <div
              className="c4 c5"
              dangerouslySetInnerHTML={
                Object {
                  "__html": undefined,
                }
              }
              size="24px"
            />
          </div>
        </div>
        <ul
          className="c6 c7"
          data-test="itemList"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/DropdownSingle Disabled 1`] = `
.c4 {
  height: 24px;
  width: 24px;
}

.c4 svg {
  height: 24px;
  width: 24px;
}

.c6 {
  background: rgb(255,255,255);
  border-radius: 6px;
  box-shadow: 0 5px 11px rgba(0,0,0,0.16);
  max-height: 204px;
  overflow-y: auto;
  padding: 12px;
  z-index: 1;
}

.c0 {
  width: 200px;
}

.c1 {
  position: relative;
}

.c5 {
  position: absolute;
  right: 12px;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  -webkit-transition: 0.2s;
  transition: 0.2s;
}

.c5.visible {
  -webkit-transform: translateY(-50%) rotate(180deg);
  -ms-transform: translateY(-50%) rotate(180deg);
  transform: translateY(-50%) rotate(180deg);
}

.c2 {
  min-height: 40px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 8px 12px;
  border: 1px solid rgb(234,234,234);
  border-radius: 6px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-size: 14px;
  cursor: pointer;
  background-color: inherit;
}

.c7 {
  position: absolute;
  left: 0;
  width: 100%;
  -webkit-transition: all 0.2s;
  transition: all 0.2s;
  -webkit-transform-origin: top;
  -ms-transform-origin: top;
  transform-origin: top;
  visibility: hidden;
  -webkit-transform: scaleY(0);
  -ms-transform: scaleY(0);
  transform: scaleY(0);
}

.c3 {
  padding-right: 4px;
  word-break: break-word;
  width: calc(100% - 28px);
}

<div
  className="ml-20 mt-10"
>
  <div
    className="c0"
    width="200px"
  >
    <div
      className="c1"
    >
      <div>
        <div
          className="c2"
          data-test="body"
          disabled={false}
          onClick={[Function]}
        >
          <div
            className="c3"
            data-test="text"
          />
          <div
            className=""
            onClick={[Function]}
          >
            <div
              className="c4 c5"
              dangerouslySetInnerHTML={
                Object {
                  "__html": undefined,
                }
              }
              size="24px"
            />
          </div>
        </div>
        <ul
          className="c6 c7"
          data-test="itemList"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/DropdownSingle Icon 1`] = `
.c4 {
  height: 24px;
  width: 24px;
}

.c4 svg {
  height: 24px;
  width: 24px;
}

.c6 {
  background: rgb(255,255,255);
  border-radius: 6px;
  box-shadow: 0 5px 11px rgba(0,0,0,0.16);
  max-height: 204px;
  overflow-y: auto;
  padding: 12px;
  z-index: 1;
}

.c0 {
  width: 200px;
}

.c1 {
  position: relative;
}

.c5 {
  position: absolute;
  right: 12px;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  -webkit-transition: 0.2s;
  transition: 0.2s;
}

.c5.visible {
  -webkit-transform: translateY(-50%) rotate(180deg);
  -ms-transform: translateY(-50%) rotate(180deg);
  transform: translateY(-50%) rotate(180deg);
}

.c2 {
  min-height: 40px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 8px 12px;
  border: 1px solid rgb(234,234,234);
  border-radius: 6px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-size: 14px;
  cursor: pointer;
  background-color: inherit;
}

.c7 {
  position: absolute;
  left: 0;
  width: 100%;
  -webkit-transition: all 0.2s;
  transition: all 0.2s;
  -webkit-transform-origin: top;
  -ms-transform-origin: top;
  transform-origin: top;
  visibility: hidden;
  -webkit-transform: scaleY(0);
  -ms-transform: scaleY(0);
  transform: scaleY(0);
}

.c3 {
  padding-right: 4px;
  word-break: break-word;
  width: calc(100% - 28px);
}

<div
  className="ml-20 mt-10"
>
  <div
    className="c0"
    width="200px"
  >
    <div
      className="c1"
    >
      <div>
        <div
          className="c2"
          data-test="body"
          disabled={false}
          onClick={[Function]}
        >
          <div
            className="c3"
            data-test="text"
          />
          <div
            className=""
            onClick={[Function]}
          >
            <div
              className="c4 c5"
              dangerouslySetInnerHTML={
                Object {
                  "__html": undefined,
                }
              }
              size="24px"
            />
          </div>
        </div>
        <ul
          className="c6 c7"
          data-test="itemList"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/DropdownSingle Input 1`] = `
.c4 {
  height: 24px;
  width: 24px;
}

.c4 svg {
  height: 24px;
  width: 24px;
}

.c6 {
  background: rgb(255,255,255);
  border-radius: 6px;
  box-shadow: 0 5px 11px rgba(0,0,0,0.16);
  max-height: 204px;
  overflow-y: auto;
  padding: 12px;
  z-index: 1;
}

.c0 {
  width: 200px;
}

.c1 {
  position: relative;
}

.c5 {
  position: absolute;
  right: 12px;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  -webkit-transition: 0.2s;
  transition: 0.2s;
}

.c5.visible {
  -webkit-transform: translateY(-50%) rotate(180deg);
  -ms-transform: translateY(-50%) rotate(180deg);
  transform: translateY(-50%) rotate(180deg);
}

.c2 {
  min-height: 40px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 8px 12px;
  border: 1px solid rgb(234,234,234);
  border-radius: 6px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-size: 14px;
  cursor: pointer;
  background-color: inherit;
}

.c7 {
  position: absolute;
  left: 0;
  width: 100%;
  -webkit-transition: all 0.2s;
  transition: all 0.2s;
  -webkit-transform-origin: top;
  -ms-transform-origin: top;
  transform-origin: top;
  visibility: hidden;
  -webkit-transform: scaleY(0);
  -ms-transform: scaleY(0);
  transform: scaleY(0);
}

.c3 {
  padding-right: 4px;
  word-break: break-word;
  width: calc(100% - 28px);
}

<div
  className="ml-20 mt-10"
>
  <div
    className="c0"
    width="200px"
  >
    <div
      className="c1"
    >
      <div>
        <div
          className="c2"
          data-test="body"
          onClick={[Function]}
        >
          <div
            className="c3"
            data-test="text"
          />
          <div
            className=""
            onClick={[Function]}
          >
            <div
              className="c4 c5"
              dangerouslySetInnerHTML={
                Object {
                  "__html": undefined,
                }
              }
              size="24px"
            />
          </div>
        </div>
        <ul
          className="c6 c7"
          data-test="itemList"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/DropdownSingle ItemList 1`] = `
.c0 {
  background: rgb(255,255,255);
  border-radius: 6px;
  box-shadow: 0 5px 11px rgba(0,0,0,0.16);
  max-height: 204px;
  overflow-y: auto;
  padding: 12px;
  z-index: 1;
}

<div
  className="ml-20 mt-10"
>
  <ul
    className="c0"
    data-test="itemList"
  />
</div>
`;

exports[`Storyshots Components/FileUploader all 1`] = `
.c4 {
  height: 24px;
  width: 24px;
}

.c4 svg {
  height: 24px;
  width: 24px;
}

.c9 {
  height: 24px;
  width: 24px;
}

.c9 svg {
  height: 24px;
  width: 24px;
}

.c9 #fill {
  fill: rgb(224,85,72);
}

.c0 {
  position: relative;
  width: 400px;
}

.c7 {
  position: relative;
  width: 100%;
}

.c1 {
  cursor: pointer;
  text-align: center;
  height: 40px;
  padding: 0 44px 0 16px;
  border-radius: 6px;
  border: 1px dashed rgb(51,51,51);
}

.c1.attach {
  border: 1px solid rgb(51,51,51);
}

.c3 {
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  line-height: 40px;
}

.c5 {
  margin-top: 7px;
}

.c6 {
  max-width: 262px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-size: 14px;
  margin-left: 4px;
}

.c2 {
  display: none;
}

.c8 {
  position: absolute;
  width: 24px;
  height: 24px;
  top: 50%;
  right: 24px;
  cursor: pointer;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

<div
  className="m-16"
>
  <div>
    <div
      className="c0"
      onBlur={[Function]}
      onClick={[Function]}
      onDragEnter={[Function]}
      onDragLeave={[Function]}
      onDragOver={[Function]}
      onDrop={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      tabIndex={0}
      width="400px"
    >
      <div
        className="c1"
      >
        <input
          autoComplete="off"
          className="c2"
          multiple={true}
          onChange={[Function]}
          onClick={[Function]}
          style={
            Object {
              "display": "none",
            }
          }
          tabIndex={-1}
          type="file"
        />
        <div
          className="c3"
        >
          <div
            className="c4 c5"
            dangerouslySetInnerHTML={
              Object {
                "__html": undefined,
              }
            }
            size="24px"
          />
          <span
            className="c6"
          >
            ファイルを選択またはドラッグ&ドロップ
          </span>
        </div>
      </div>
    </div>
  </div>
  <div
    className="mt-8"
  >
    <div
      className="c7"
      onBlur={[Function]}
      onClick={[Function]}
      onDragEnter={[Function]}
      onDragLeave={[Function]}
      onDragOver={[Function]}
      onDrop={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      tabIndex={0}
    >
      <div
        className="c1"
      >
        <input
          autoComplete="off"
          className="c2"
          multiple={true}
          onChange={[Function]}
          onClick={[Function]}
          style={
            Object {
              "display": "none",
            }
          }
          tabIndex={-1}
          type="file"
        />
        <div
          className="c3"
        >
          <div
            className="c4 c5"
            dangerouslySetInnerHTML={
              Object {
                "__html": undefined,
              }
            }
            size="24px"
          />
          <span
            className="c6"
          >
            hoge.png
          </span>
          <div
            className="c8"
            onClick={[Function]}
          >
            <div
              className="c9"
              color="rgb(224, 85, 72)"
              dangerouslySetInnerHTML={
                Object {
                  "__html": undefined,
                }
              }
              size="24px"
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Components/Input Number 1`] = `
.c0 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c0 input[type='number']::-webkit-outer-spin-button,
.c0 input[type='number']::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c0 input[type='number'] {
  -moz-appearance: textfield;
}

.c1 {
  height: 40px;
  padding: 0 12px;
  border-radius: 6px;
  border: solid 1px rgb(234,234,234);
  color: rgb(51,51,51);
  -webkit-transition: 0.15s border-color;
  transition: 0.15s border-color;
}

.c1:focus {
  outline: none;
  border-color: rgb(114,206,92);
}

.c1::-webkit-input-placeholder {
  color: rgb(214,214,214);
}

.c1::-moz-placeholder {
  color: rgb(214,214,214);
}

.c1:-ms-input-placeholder {
  color: rgb(214,214,214);
}

.c1::placeholder {
  color: rgb(214,214,214);
}

<div
  className="c0"
>
  <input
    className="c1"
    disabled={false}
    format="number"
    onBlur={[Function]}
    onChange={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    placeholder="Enter your age"
    value="0"
  />
  
</div>
`;

exports[`Storyshots Components/Input Number With Decimal Place 1`] = `
.c0 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c0 input[type='number']::-webkit-outer-spin-button,
.c0 input[type='number']::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c0 input[type='number'] {
  -moz-appearance: textfield;
}

.c1 {
  height: 40px;
  padding: 0 12px;
  border-radius: 6px;
  border: solid 1px rgb(234,234,234);
  color: rgb(51,51,51);
  -webkit-transition: 0.15s border-color;
  transition: 0.15s border-color;
}

.c1:focus {
  outline: none;
  border-color: rgb(114,206,92);
}

.c1::-webkit-input-placeholder {
  color: rgb(214,214,214);
}

.c1::-moz-placeholder {
  color: rgb(214,214,214);
}

.c1:-ms-input-placeholder {
  color: rgb(214,214,214);
}

.c1::placeholder {
  color: rgb(214,214,214);
}

<div
  className="c0"
>
  <input
    className="c1"
    disabled={false}
    format="number"
    onBlur={[Function]}
    onChange={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    placeholder="Enter your age"
    value="0"
  />
  
</div>
`;

exports[`Storyshots Components/Input Text 1`] = `
.c0 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c0 input[type='number']::-webkit-outer-spin-button,
.c0 input[type='number']::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c0 input[type='number'] {
  -moz-appearance: textfield;
}

.c1 {
  height: 40px;
  padding: 0 12px;
  border-radius: 6px;
  border: solid 1px rgb(234,234,234);
  color: rgb(51,51,51);
  -webkit-transition: 0.15s border-color;
  transition: 0.15s border-color;
}

.c1:focus {
  outline: none;
  border-color: rgb(114,206,92);
}

.c1::-webkit-input-placeholder {
  color: rgb(214,214,214);
}

.c1::-moz-placeholder {
  color: rgb(214,214,214);
}

.c1:-ms-input-placeholder {
  color: rgb(214,214,214);
}

.c1::placeholder {
  color: rgb(214,214,214);
}

<div
  className="c0"
>
  <input
    className="c1"
    disabled={false}
    format="text"
    onBlur={[Function]}
    onChange={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    placeholder="Enter your name"
    value=""
  />
</div>
`;

exports[`Storyshots Components/Loading all 1`] = `
.c0 {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 10;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100vh;
  width: 100vw;
  visibility: hidden;
  opacity: 0;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
  background-color: rgb(255,255,255);
  color: rgb(51,51,51);
}

.c1 {
  width: 100px;
}

.c2 {
  margin-top: 12px;
}

<div
  className="c0"
>
  <img
    alt="Loading"
    className="c1"
  />
  <div
    className="c2"
  >
    読み込み中…
  </div>
</div>
`;

exports[`Storyshots Components/MeatballKebabMenu All 1`] = `
.c2 {
  height: 24px;
  width: 24px;
}

.c2 svg {
  height: 24px;
  width: 24px;
}

.c2 #fill {
  fill: rgba(83,180,100,1);
}

.c0 {
  position: relative;
  cursor: pointer;
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-transition: background-color 0.2s ease 0s;
  transition: background-color 0.2s ease 0s;
}

.c0:hover {
  background: rgb(245,245,245);
  border-radius: 6px;
}

.c1 {
  position: relative;
}

.c3 {
  white-space: nowrap;
  position: absolute;
  display: block;
  max-width: 140px;
  background: rgb(255,255,255);
  border-radius: 6px;
  box-shadow: 0 5px 11px 0 rgba(0,0,0,0.16);
  padding: 12px;
  -webkit-transition: 0.2s;
  transition: 0.2s;
  visibility: visible;
  -webkit-transform: scaleY(1);
  -ms-transform: scaleY(1);
  transform: scaleY(1);
  -webkit-transform-origin: top;
  -ms-transform-origin: top;
  transform-origin: top;
  right: 0;
  top: 24px;
  visibility: hidden;
  -webkit-transform: scaleY(0);
  -ms-transform: scaleY(0);
  transform: scaleY(0);
}

.c5 {
  cursor: pointer;
  list-style: none;
  color: #333;
}

.c5 + .c4 {
  margin-top: 8px;
}

.c6 {
  cursor: pointer;
  list-style: none;
  color: rgb(224,85,72);
}

.c6 + .c4 {
  margin-top: 8px;
}

<div
  className="flex items-center justify-center w-screen h-screen"
>
  <div>
    <div
      className="c0"
    >
      <div>
        <div
          className="c1"
          data-test="menu-component"
          onClick={[Function]}
        >
          <div
            className="c2 "
            color="rgba(83,180,100,1)"
            dangerouslySetInnerHTML={
              Object {
                "__html": undefined,
              }
            }
            size="24px"
          />
          <div
            className=""
          >
            <ul
              className="c3"
              data-test="list-component"
            >
              <li
                className="c4 c5"
                data-item="リスト1"
                data-test="list-item0"
                onClick={[Function]}
              >
                リスト1
              </li>
              <li
                className="c4 c5"
                data-item="リスト2"
                data-test="list-item1"
                onClick={[Function]}
              >
                リスト2
              </li>
              <li
                className="c4 c6"
                color="destructive"
                data-item="リスト3"
                data-test="list-item2"
                onClick={[Function]}
              >
                リスト3
              </li>
            </ul>
          </div>
        </div>
      </div>
    </div>
    <div />
  </div>
</div>
`;

exports[`Storyshots Components/Modal All 1`] = `
.c8 {
  position: relative;
  overflow: hidden;
  -webkit-transform: translate3d(0,0,0);
  -ms-transform: translate3d(0,0,0);
  transform: translate3d(0,0,0);
  -webkit-transition: background-color 0.2s,box-shadow 0.2s,border 0.2s;
  transition: background-color 0.2s,box-shadow 0.2s,border 0.2s;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 6px;
  border-style: none;
  padding: 0 16px;
  cursor: pointer;
  height: 40px;
  width: auto;
  box-shadow: none;
  outline: none;
  font-size: 14px;
  color: rgb(255,255,255);
  border: 1px solid rgb(51,51,51);
  background-color: rgb(51,51,51);
}

.c8:after {
  content: '';
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
  background-image: radial-gradient( circle, rgb(255,255,255) 10%, transparent 10.01% );
  background-repeat: no-repeat;
  background-position: 50%;
  -webkit-transform: scale(10,10);
  -ms-transform: scale(10,10);
  transform: scale(10,10);
  opacity: 0;
  -webkit-transition: -webkit-transform 0.2s,opacity 1s;
  -webkit-transition: transform 0.2s,opacity 1s;
  transition: transform 0.2s,opacity 1s;
}

.c8:active:after {
  -webkit-transform: scale(0,0);
  -ms-transform: scale(0,0);
  transform: scale(0,0);
  opacity: 0.3;
  -webkit-transition: 0s;
  transition: 0s;
}

.c8.small {
  height: 32px;
}

.c8:hover {
  background-color: rgb(6,108,43);
  border-color: rgb(51,51,51);
}

.c8:active {
  background-color: rgb(6,95,38);
  border-color: rgb(6,95,38);
  box-shadow: none;
  outline: none;
}

.c8:focus {
  box-shadow: none;
  outline: none;
}

.c5 {
  height: 24px;
  width: 24px;
}

.c5 svg {
  height: 24px;
  width: 24px;
}

.c5 #fill {
  fill: rgb(51,51,51);
}

.c0 {
  position: fixed;
  z-index: 600;
  overflow: scroll;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0,0,0,0.6);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c1 {
  width: 678px;
  background-color: rgb(255,255,255);
  border-radius: 8px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 24px;
  border-bottom: 1px solid rgb(234,234,234);
}

.c3 {
  color: rgb(51,51,51)!important;
  font-size: 18px;
  font-weight: bold;
}

.c4 {
  cursor: pointer;
  height: 32px;
  width: 32px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-transition: background-color 0.2s ease 0s;
  transition: background-color 0.2s ease 0s;
  background: rgb(255,255,255);
}

.c4:hover {
  background: rgb(245,245,245);
  border-radius: 6px;
}

.c6 {
  color: rgb(51,51,51);
  padding: 24px;
}

.c7 {
  padding: 24px;
  border-top: 1px solid rgb(234,234,234);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c10 {
  min-width: 158px;
}

.c10 + .c9 {
  margin-left: 16px;
}

<div
  className="m-10"
>
  <modal>
    <div
      className="c0"
    >
      <div
        className="c1"
      >
        <div
          className="c2"
        >
          <div
            className="c3"
          >
            ロール作成
          </div>
          <div
            className="c4"
            data-test="closeIcon"
            onClick={[Function]}
          >
            <div
              className="c5"
              color="rgb(51, 51, 51)"
              dangerouslySetInnerHTML={
                Object {
                  "__html": undefined,
                }
              }
              size="24px"
            />
          </div>
        </div>
        <div
          className="c6"
        >
          コンテンツ
        </div>
        <div
          className="c7"
        >
          <button
            className="c8 c9 c10"
            data-test="button0"
            disabled={false}
            onClick={[Function]}
            type="submit"
          >
            登録
          </button>
        </div>
      </div>
    </div>
  </modal>
</div>
`;

exports[`Storyshots Components/RadioButton All 1`] = `
.c1 {
  height: 24px;
  width: 24px;
}

.c1 svg {
  height: 24px;
  width: 24px;
}

.c1 #fill {
  fill: rgb(51,51,51);
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
}

.c2 {
  color: rgb(51,51,51);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 24px;
  width: 24px;
}

.c3 {
  max-width: 280px;
  word-break: break-all;
  font-size: 14px;
  padding-left: 4px;
  height: 24px;
  line-height: 24px;
  color: rgb(0,0,0);
}

<div
  className="c0"
  data-test="radio-on"
  disabled={false}
  onClick={[Function]}
>
  <div
    className="c1 c2"
    color="rgb(51, 51, 51)"
    dangerouslySetInnerHTML={
      Object {
        "__html": undefined,
      }
    }
    size="24px"
  />
  <span
    className="c3"
    disabled={false}
  >
    RadioButton
  </span>
</div>
`;

exports[`Storyshots Components/SegmentedControl Default 1`] = `
.c0 {
  color: rgb(51,51,51);
  background: rgb(255,255,255);
  -webkit-transition: 0.2s;
  transition: 0.2s;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  text-align: center;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 14px;
  height: 40px;
  line-height: 40px;
  -webkit-text-decoration: none;
  text-decoration: none;
  border: 1px solid rgb(51,51,51);
  border-right: 0;
  border-collapse: collapse;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: pointer;
  width: 200px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: rgb(51,51,51);
  color: rgb(255,255,255);
  cursor: auto;
}

.c0:first-child {
  border-top-left-radius: 6px;
  border-bottom-left-radius: 6px;
}

.c0:last-child {
  border-top-right-radius: 6px;
  border-bottom-right-radius: 6px;
  border-right: 1px solid rgb(51,51,51);
}

.c0:hover {
  background: rgb(245,245,245);
}

.c0:active {
  background: rgb(214,214,214);
}

.c0:hover {
  background: rgb(51,51,51);
}

.c0:active {
  background: rgb(51,51,51);
}

.c1 {
  color: rgb(51,51,51);
  background: rgb(255,255,255);
  -webkit-transition: 0.2s;
  transition: 0.2s;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  text-align: center;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 14px;
  height: 40px;
  line-height: 40px;
  -webkit-text-decoration: none;
  text-decoration: none;
  border: 1px solid rgb(51,51,51);
  border-right: 0;
  border-collapse: collapse;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: pointer;
  width: 200px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c1:first-child {
  border-top-left-radius: 6px;
  border-bottom-left-radius: 6px;
}

.c1:last-child {
  border-top-right-radius: 6px;
  border-bottom-right-radius: 6px;
  border-right: 1px solid rgb(51,51,51);
}

.c1:hover {
  background: rgb(245,245,245);
}

.c1:active {
  background: rgb(214,214,214);
}

<div
  className="m-10"
>
  <div
    className="c0"
    data-test="default-item0"
    onClick={[Function]}
    selected={true}
  >
    最初のタブ
  </div>
  <div
    className="c1"
    data-test="default-item1"
    onClick={[Function]}
    selected={false}
  >
    真ん中のタブ
  </div>
  <div
    className="c1"
    data-test="default-item2"
    onClick={[Function]}
    selected={false}
  >
    最後のタブ
  </div>
</div>
`;

exports[`Storyshots Components/SegmentedControl Link 1`] = `
.c0 {
  color: rgb(51,51,51);
  background: rgb(255,255,255);
  -webkit-transition: 0.2s;
  transition: 0.2s;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  text-align: center;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 14px;
  height: 40px;
  line-height: 40px;
  -webkit-text-decoration: none;
  text-decoration: none;
  border: 1px solid rgb(51,51,51);
  border-right: 0;
  border-collapse: collapse;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: pointer;
  width: 200px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0:first-child {
  border-top-left-radius: 6px;
  border-bottom-left-radius: 6px;
}

.c0:last-child {
  border-top-right-radius: 6px;
  border-bottom-right-radius: 6px;
  border-right: 1px solid rgb(51,51,51);
}

.c0:hover {
  background: rgb(245,245,245);
}

.c0:active {
  background: rgb(214,214,214);
}

.c0.selected {
  background: rgb(51,51,51);
  color: rgb(255,255,255);
  cursor: auto;
}

.c0.selected:hover {
  background: rgb(51,51,51);
}

.c0.selected:active {
  background: rgb(51,51,51);
}

<div
  className="m-10"
>
  <a
    aria-current={null}
    className="c0"
    data-test="link-item0"
    href="/first"
    itemWidth="200px"
    onClick={[Function]}
  >
    最初のタブ
  </a>
  <a
    aria-current={null}
    className="c0"
    data-test="link-item1"
    href="/middle"
    itemWidth="200px"
    onClick={[Function]}
  >
    真ん中のタブ
  </a>
  <a
    aria-current={null}
    className="c0"
    data-test="link-item2"
    href="/last"
    itemWidth="200px"
    onClick={[Function]}
  >
    最後のタブ
  </a>
</div>
`;

exports[`Storyshots Components/StepNumber Default 1`] = `
.c2 {
  height: 24px;
  width: 24px;
}

.c2 svg {
  height: 24px;
  width: 24px;
}

.c2 #fill {
  fill: rgb(51,51,51);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  width: 138px;
  height: 32px;
  text-align: center;
  line-height: 32px;
  border-radius: 6px;
  background: rgb(255,255,255);
  border: 1px solid rgb(234,234,234);
  color: rgb(51,51,51);
}

.c4 {
  font-size: 12px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c3 {
  display: inline-block;
  vertical-align: middle;
  height: 100%;
}

.c1 {
  cursor: pointer;
  width: 32px;
  text-align: center;
  background: rgb(245,245,245);
  border-right: 1px solid rgb(234,234,234);
  border-radius: 5px 0 0 5px;
}

.c5 {
  cursor: pointer;
  width: 32px;
  text-align: center;
  background: rgb(245,245,245);
  border-left: 1px solid rgb(234,234,234);
  border-radius: 0 5px 5px 0;
}

<div
  className="c0"
>
  <div
    className="c1"
    data-test="incrementValue"
    onClick={[Function]}
  >
    <div
      className="c2 c3"
      color="rgb(51,51,51)"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      size="24px"
    />
  </div>
  <span
    className="c4"
  >
    1
    個
  </span>
  <div
    className="c5"
    data-test="decrementValue"
    onClick={[Function]}
  >
    <div
      className="c2 c3"
      color="rgb(51,51,51)"
      dangerouslySetInnerHTML={
        Object {
          "__html": undefined,
        }
      }
      size="24px"
    />
  </div>
</div>
`;

exports[`Storyshots Components/Switch all 1`] = `
.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

.c2 {
  margin: 0 8px;
  position: relative;
  width: 46px;
  height: 24px;
  border-radius: 12px;
  cursor: pointer;
  background: rgb(173,173,173);
  -webkit-transition: 0.2s;
  transition: 0.2s;
}

.c2.activeOuter {
  background: rgb(51,51,51);
}

.c3 {
  position: absolute;
  left: 0;
  margin: 4px;
  width: 16px;
  height: 16px;
  border-radius: 8px;
  background: rgb(255,255,255);
  -webkit-transition: 0.2s;
  transition: 0.2s;
}

.c3.activeSwitch {
  left: 22px;
}

.c1 {
  line-height: 24px;
  max-width: 112px;
  white-space: nowrap;
  overflow: hidden;
  font-size: 14px;
}

<div
  className="m-10"
>
  <div
    className="c0"
    data-test="switch-off"
  >
    <span
      className="c1"
    >
      OFF
    </span>
    <div
      className="c2"
      data-test="switch"
      onClick={[Function]}
    >
      <span
        className="c3"
      />
    </div>
    <span
      className="c1"
    >
      ON
    </span>
  </div>
</div>
`;

exports[`Storyshots Components/Tag Destructive 1`] = `
.c0 {
  font-size: 12px;
  box-sizing: border-box;
  border-radius: 16px;
  padding: 4.5px 8px;
  font-weight: bold;
  display: inline-block;
  color: rgb(224,85,72);
  background: rgb(253,246,246);
  border: 1px solid rgb(253,246,246);
}

<div
  className="c0"
>
  Tag
</div>
`;

exports[`Storyshots Components/Tag Primary 1`] = `
.c0 {
  font-size: 12px;
  box-sizing: border-box;
  border-radius: 16px;
  padding: 4.5px 8px;
  font-weight: bold;
  display: inline-block;
  color: rgb(8,135,54);
  background: rgb(242,249,245);
  border: 1px solid rgb(242,249,245);
}

<div
  className="c0"
>
  Tag
</div>
`;

exports[`Storyshots Components/Tag Secondary 1`] = `
.c0 {
  font-size: 12px;
  box-sizing: border-box;
  border-radius: 16px;
  padding: 4.5px 8px;
  font-weight: bold;
  display: inline-block;
  color: rgb(51,51,51);
  background: rgb(245,245,245);
  border: 1px solid rgb(245,245,245);
}

<div
  className="c0"
>
  Tag
</div>
`;

exports[`Storyshots Components/Text Standard 1`] = `
.c0 {
  color: #333;
}

<p
  className="c0"
>
  Hello
</p>
`;

exports[`Storyshots Components/Textarea all 1`] = `
.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c1 {
  display: block;
  border: 1px solid rgb(234,234,234);
  border-radius: 6px;
  width: 100%;
  padding: 8px;
  margin-top: 4px;
  font-size: 14px;
  resize: none;
  outline: none;
  color: rgb(51,51,51);
  background-color: inherit;
}

.c1::-webkit-input-placeholder {
  color: rgb(214,214,214);
}

.c1::-moz-placeholder {
  color: rgb(214,214,214);
}

.c1:-ms-input-placeholder {
  color: rgb(214,214,214);
}

.c1::placeholder {
  color: rgb(214,214,214);
}

.c1:focus {
  border-color: rgb(114,206,92);
}

<div
  className="c0"
>
  <textarea
    className="c1"
    errored={false}
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="文字を入力してください。"
    style={
      Object {
        "height": 0,
      }
    }
    value=""
  />
</div>
`;

exports[`Storyshots Components/ToolTip All 1`] = `
.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: rgb(245,245,245);
  border-radius: 6px;
  -webkit-filter: drop-shadow(0 5px 11px rgba(0,0,0,0.16));
  filter: drop-shadow(0 5px 11px rgba(0,0,0,0.16));
  position: relative;
  top: 6px;
}

.c0::before {
  content: '';
  position: absolute;
  right: 0;
  top: -6px;
  left: 0;
  width: 0;
  height: 0;
  margin: auto;
  border-right: 6px solid transparent;
  border-bottom: 6px solid rgb(245,245,245);
  border-left: 6px solid transparent;
}

.c1 {
  height: 100%;
  font-size: 14px;
  padding: 8px 12px;
  color: #333;
  max-width: 280px;
  word-break: break-all;
}

<div
  className="c0"
  data-test="tool-tip"
  direction="top"
>
  <span
    className="c1"
  >
    テキスト要素
  </span>
</div>
`;
